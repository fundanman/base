<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>QA at the Point</title>
    <description>QAP is the Software Testing and Quality Community based in Utah, USA. Consider contributing to the knowledgebase and following, liking, or donating. Anything helps!</description>
    <link>https://base.qap.dev/</link>
    <atom:link href="https://base.qap.dev/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 07 Feb 2022 23:49:47 +0000</pubDate>
    <lastBuildDate>Mon, 07 Feb 2022 23:49:47 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>

    
      <item>
        <title>How to Conduct High Quality Interviews</title>
        <description>&lt;p&gt;There are lots of vidoes and articles about how to ‚Äúace an interview‚Äù, but not as much around how to be a &lt;em&gt;good interviewer&lt;/em&gt; or how to setup a &lt;em&gt;good Interview Process&lt;/em&gt;. Part of the reason is that your interview strategy will differ based on things like the role or constraints of the position, but also because the approach will be slightly different from candidate to candidate since each person is unique.&lt;/p&gt;

&lt;p&gt;In this post, we will use examples from different roles including &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Software Tester&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Automation Engineer&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;QA Manager&lt;/code&gt;. However, this is meant to be a set of generalized processes, principles, and guidelines that work for any position.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üëÄ For a more detailed breakdown for interviewing a specific role, be on the lookout for new posts in the QAP Knowledge Base!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#define-the-problem&quot;&gt;Define the Problem&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#questions-as-an-exercise&quot;&gt;Questions as an exercise&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#create-a-job-description&quot;&gt;Create a Job Description&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#what-should-a-jd-include&quot;&gt;What should a JD include?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#support-recruitment&quot;&gt;Support Recruitment&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#prepare-for-the-interview&quot;&gt;Prepare for the Interview&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#interviewer-roles-and-definitions&quot;&gt;Interviewer Roles and Definitions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#driver&quot;&gt;Driver&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#interviewer&quot;&gt;Interviewer&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#candidate&quot;&gt;Candidate&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-the-interview-team&quot;&gt;Create the Interview Team&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#rounds-and-sessions&quot;&gt;Rounds and Sessions&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#core-team-and-backups&quot;&gt;Core Team and Backups&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#never-interview-alone&quot;&gt;Never Interview Alone&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-the-interview&quot;&gt;Create the Interview&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#technical-interview&quot;&gt;Technical Interview&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#questions&quot;&gt;Questions&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#scenarios&quot;&gt;Scenarios&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#challenges&quot;&gt;Challenges&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#culture-fit&quot;&gt;Culture Fit Interview&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conduct-the-technical-interview&quot;&gt;Conduct the Technical Interview&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#review-the-resume-and-portfolio&quot;&gt;Review the Resume and Portfolio&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#curate-the-interview&quot;&gt;Curate the Interview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#run-the-interview&quot;&gt;Run the interview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#post-interview&quot;&gt;Post Interview&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#assess&quot;&gt;Assess&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#retrospect&quot;&gt;Retrospect&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conduct-the-culture-interview&quot;&gt;Conduct the Culture Fit Interview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#final-decision&quot;&gt;Final Decision&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;define-the-problem&quot;&gt;Define the Problem&lt;/h1&gt;

&lt;p&gt;You want to start on the right foot by defining the problem you‚Äôre looking to solve by hiring. This step is crucial, yet it is often overlooked which causes a lot of problems down the road.&lt;/p&gt;

&lt;p&gt;For example, let‚Äôs say you are asked by your manager to join an interview for a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data Engineer&lt;/code&gt; that starts in 15 minutes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How would you prepare?&lt;/li&gt;
  &lt;li&gt;Do you know which team they are joining?&lt;/li&gt;
  &lt;li&gt;Do you know what skills or experience they need to be successful?&lt;/li&gt;
  &lt;li&gt;What problems will they be solving?&lt;/li&gt;
  &lt;li&gt;What questions are you gonna ask?&lt;/li&gt;
  &lt;li&gt;Why do we need this person right now??&lt;/li&gt;
  &lt;li&gt;What are you even supposed to do in the interview so you don‚Äôt look a fool???&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This happened to me a few times early on in my career‚Ä¶ I was able to B.S. my way through them, but I was more concerned about &lt;em&gt;how I looked&lt;/em&gt; in front of my boss and colleagues instead of the experience the candidate was going through in a high pressure interview. I had no idea what we needed this person for, so my questions and what I was looking for were completely generic and coming off the top of my head. I‚Äôm sure you‚Äôve experienced interviews where it seems like they don‚Äôt know what to ask next, or there are awkward pauses, or it feels scattered.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üö© These are indicators or ‚Äúred flags‚Äù that the inteviewers are not aligned and there is a lack of understanding and preparation. It doesn‚Äôt look good.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;questions-as-an-exercise&quot;&gt;Questions as an exercise&lt;/h2&gt;

&lt;p&gt;Instead, create a document that answers the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;why&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;what&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;when&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;who&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;how&lt;/code&gt; questions. Here are some good questions to answer as an &lt;a href=&quot;#create-the-interview-team&quot;&gt;Interview Team&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;What&lt;/strong&gt; are the problems we‚Äôre facing that require us to hire externally?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What&lt;/strong&gt; are the roles and responsibilities this person will have?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What&lt;/strong&gt; risks and constraints do we have? (example: budget)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Why&lt;/strong&gt; is hiring 1 or more people the right approach or solution to these problems?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;When&lt;/strong&gt; would we like our ideal candidate(s) to start?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;When&lt;/strong&gt; do we need to have these problems solved by?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Who&lt;/strong&gt; is the ideal candidate and what qualities, skills, attributes, etc. do they possess?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Who&lt;/strong&gt; are the stakeholders (people that care about these problems) and what does success look like to them?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How&lt;/strong&gt; are we going to find this ideal person?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What&lt;/strong&gt; questions, scenarios, and challenges will help us identify the ideal candidate as efficiently as possible?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How&lt;/strong&gt; are we going to ensure that, once hired, they are set up for success?&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° You can add this to your HR/Recruiter software like BambooHR. If that‚Äôs not available, Google Docs work, but I prefer to version control this in something like GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Answering these questions together and going through this exercise creates &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alignment&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;understanding&lt;/code&gt; between you, hiring managers, upper management, recruiters, and stakeholders. This living document will act as your source of truth as you continue working on things like &lt;a href=&quot;#create-a-job-description&quot;&gt;Job Descriptions&lt;/a&gt; and the &lt;a href=&quot;#create-the-interview&quot;&gt;Interview Process&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;create-a-job-description&quot;&gt;Create a Job Description&lt;/h1&gt;

&lt;p&gt;Creating a Job Description (JD) is much easier once you‚Äôve defined the problem. The main difference between the ‚Äúproblem doc‚Äù is that the Job Description is meant to be public-facing, provide a clear and concise description of the position, and &lt;strong&gt;attract talent&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° Job Descriptions should never be more than 2 pages. I recommend making it a &lt;em&gt;single&lt;/em&gt; page!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-should-a-jd-include&quot;&gt;What should a JD include?&lt;/h2&gt;

&lt;p&gt;Remember, the goal is to attract talent while conveying the most critical pieces about the position. I like to have a layout like this:&lt;/p&gt;

&lt;h3 id=&quot;1-company-title-and-details&quot;&gt;1. Company Title and Details&lt;/h3&gt;

&lt;p&gt;Self-explanatory. Company name with any relevant info for the candidate to follow up or submit an application.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Company logo and/or name&lt;/li&gt;
  &lt;li&gt;Title of position&lt;/li&gt;
  &lt;li&gt;Hiring Manager contact info (example: email, LinkedIn)&lt;/li&gt;
  &lt;li&gt;How or where to apply&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-the-opportunity&quot;&gt;2. The Opportunity&lt;/h3&gt;

&lt;p&gt;The ‚Äúelevator pitch‚Äù for why they should be excited for this opportunity. Think of it as a summary of the project and role with some of the main benefits and perks.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Company description (optional)&lt;/li&gt;
  &lt;li&gt;Benefits or main perks&lt;/li&gt;
  &lt;li&gt;Summary of the project and role&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Range of pay (optional, but recommended)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I highly recommend that you include the monetary compensation. For example, for an Automation Engineer role you may put:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Full-time (remote or hybrid): $115k - $140k USD
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° This has many benefits including helping underrepresented groups get fair pay, but candidates will respect the transparency as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;3-what-youll-do&quot;&gt;3. What you‚Äôll do&lt;/h3&gt;

&lt;p&gt;A bulleted list of expectations, responsibilities, activities, and tasks that they will have in this position. For example, a Manager may have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Plan work, break down larger stories, and assign tasks to engineers&lt;/li&gt;
  &lt;li&gt;Measure progress and KPIs of various projects&lt;/li&gt;
  &lt;li&gt;Communicate effectively with engineers and leaders&lt;/li&gt;
  &lt;li&gt;Collaborate with other teams (ie Sales, AI)&lt;/li&gt;
  &lt;li&gt;Propose budgets for various projects&lt;/li&gt;
  &lt;li&gt;Create reports to give updates on projects and engineers&lt;/li&gt;
  &lt;li&gt;Onboard and/or train new employees&lt;/li&gt;
  &lt;li&gt;Conduct one-on-ones and help engineers grow in their careers&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-what-you-need-to-succeed&quot;&gt;4. What you need to succeed&lt;/h3&gt;

&lt;p&gt;A bulleted list of requirements, skills, knowledge, etc., that you believe the candidate must have to yield the highest chance of success.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° It‚Äôs common to also have a BONUS section of ‚Äúnice to have‚Äù items.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, a Tester position may have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Experience defining personas for testing&lt;/li&gt;
  &lt;li&gt;Knowledge of heuristics like Observability&lt;/li&gt;
  &lt;li&gt;Comfortable leading pair and ensemble testing sessions with team members (example: devs, UX)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-recruitment&quot;&gt;Support Recruitment&lt;/h2&gt;

&lt;p&gt;The Problem Definition and Job Description should be &lt;em&gt;plenty&lt;/em&gt; for you and your recruiters to effectively find and attract talent. As a hiring manager, I always worked closely with my recruiters. Sometimes this meant pairing on a ‚Äúphone screen‚Äù interview so they had an idea of the initial questions I would ask people. Or they would have a Career Fair opportunity at a university and we‚Äôd go as a team.&lt;/p&gt;

&lt;p&gt;Recruiting is a full-time job with a lot of moving pieces and asynchronous conversations happening all at once. Do what you can to make it efficient and successful.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;prepare-for-the-interview&quot;&gt;Prepare for the Interview&lt;/h1&gt;

&lt;p&gt;While your recruiters are looking for candidates, you can work on creating the Interview Team and the actual interview. Start by defining the roles that team members will take on. This will help you pick your &lt;a href=&quot;#core-team-and-backups&quot;&gt;core team and backups&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;interviewer-roles-and-definitions&quot;&gt;Interviewer Roles and Definitions&lt;/h2&gt;

&lt;p&gt;Within the Interview Team, one person can take on multiple roles. Understanding these roles will help the interview run more smoothly.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° Feel free to improvise and do what feels natural in the interview.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;driver&quot;&gt;Driver&lt;/h3&gt;

&lt;p&gt;The person ‚Äúrunning‚Äù the interview. They do the intro, present the agenda, ‚Äúgive the mic‚Äù to different people, ask interview questions, and provide the outtro/next steps.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üöò This person sets the tone and rhythm of the interview.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;interviewer&quot;&gt;Interviewer&lt;/h3&gt;

&lt;p&gt;The person leading the questions, scenarios, and challenges.&lt;/p&gt;

&lt;p&gt;Usually the Subject Matter Expert (SME) or person that will work most closely with the candidate if hired. It is up to the Interviewer to decide which questions, scenarios, and challenges to use and which to skip while keeping things flexible if ‚Äútangents‚Äù or follow-up questions are valuable. Also, allow the Driver or Support to ask follow ups as well.&lt;/p&gt;

&lt;h3 id=&quot;support&quot;&gt;Support&lt;/h3&gt;

&lt;p&gt;The person that ‚Äúkeeps the flow moving smoothly‚Äù.&lt;/p&gt;

&lt;p&gt;Keep everyone on topic, make sure we are time-boxing things appropriately, ask interview questions, etc. It‚Äôs easy for the Interviewer to dive deep into tangents or follow up questions, so make sure we manage our time for other pieces, like giving the candidate 5-10 minutes at the end to ask their questions.&lt;/p&gt;

&lt;h3 id=&quot;candidate&quot;&gt;Candidate&lt;/h3&gt;

&lt;p&gt;The interviewee. They should be made to feel comfortable and welcome at all times. They should feel excited and that their time is appreciated. We want them leaving the interview with a positive experience, even if we say no.&lt;/p&gt;

&lt;p&gt;Yes, we want to find the best candidate as quickly as possible, but never at the cost of hurting the person. I have ended interviews early, and yet the candidate has a good experience. I don‚Äôt think any interviewer wants to see a candidate struggle or fail, so when that happens, guide them through and make the impact small - especially if you know they‚Äôve ‚Äúbombed‚Äù the interview.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° My goal is always to create an awesome experience for the candidate so that, even if we say no or end early, they know what to work on next and want to apply again when they‚Äôre ready!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;create-the-interview-team&quot;&gt;Create the Interview Team&lt;/h2&gt;

&lt;p&gt;I like to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Rule of 3&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DO NOT have more than 3 interview rounds (including the ‚Äúphone screen‚Äù)&lt;/li&gt;
  &lt;li&gt;DO NOT have more than 3 interviewers in a single session within each round&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Taking more than 3 rounds becomes more time consuming and expensive for you and the candidate, but that usually means that your Interview Process is flawed. It shouldn‚Äôt take you more than 3 rounds (~6 hours) to make a decision!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ö†Ô∏è As with many rules and ‚Äúbest practices‚Äù, use them as guidelines. For example, hiring a Director or VP will probably take more time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;rounds-and-sessions&quot;&gt;Rounds and Sessions&lt;/h3&gt;

&lt;p&gt;Quick definitions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Interview Process&lt;/code&gt; is the ‚Äúpipeline‚Äù or steps a candidate goes through from when they enter your system to when a &lt;em&gt;go&lt;/em&gt; or &lt;em&gt;no go&lt;/em&gt; decision is made.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Interview Round&lt;/code&gt; is a scheduled day for the candidate to meet with someone from your company.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Interview Session&lt;/code&gt; is a meeting with a group of people with a different context and goal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I like to have three interview rounds - each with a single session - for any non-leadership role. For example:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Round 1 (30-60 min)&lt;/strong&gt; - Phone Screen with a recruiter. The recruiter should know what we‚Äôre looking for and what questions to ask.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This is a single session because you get a single phone call from one recruiter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Round 2 (1-2 hrs)&lt;/strong&gt; - Technical Interview with my Interview Team. Can the person do what we need them to do for our short- and long-term goals?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Candidate meets with the Interview Team for a single session&lt;/li&gt;
  &lt;li&gt;If we had them meet with another group to do a different assessment, that would be the second session&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Round 3 (1-2 hrs)&lt;/strong&gt; - Culture fit with team members and leadership. Are they the right fit for everything else? (example: culture)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Candidate meets with their potential teammates and leaders&lt;/li&gt;
  &lt;li&gt;You may split this into two sessions where one is with testers and another with devs if that‚Äôs the org structure you have&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, it‚Äôs important to know what you want your whole Interview Process to look like. Each round and each session will require more coordination and people‚Äôs time. Remember, we want to be efficient and effective!&lt;/p&gt;

&lt;h3 id=&quot;core-team-and-backups&quot;&gt;Core Team and Backups&lt;/h3&gt;

&lt;p&gt;The overall Interview Process is most effective when you have a consistent ‚Äúcore‚Äù team that sees and interviews every candidate. Interviewing is a skill, so growing that skill together will not only improve the quality of the interviews, but also make it easier to train up new interviewers.&lt;/p&gt;

&lt;p&gt;The core team for each round will consist of 2 or 3 people. As you saw in the &lt;a href=&quot;#roles-and-definitions&quot;&gt;Roles and Definitions&lt;/a&gt; section, you want to fill each role. For example, recently I was hiring an Automation Engineer and my core team consisted of:&lt;/p&gt;

&lt;h4 id=&quot;technical-interview-team&quot;&gt;Technical Interview Team&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Dan, Engineering Architect as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Me, Director of Engineering as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Driver&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Interviewer&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;[open space], maybe to train a new interviewer or show a junior- to mid-level engineer, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;culture-fit-interview-team&quot;&gt;Culture Fit Interview Team&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;DJ, Cloud &amp;amp; Infrastructure Engineer as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Our CEO as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Interviewer&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Me, Director of Engineering as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Driver&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, I had backups in case anyone on my core team was unable to make it (ie on vacation, sick)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Derek, Senior Software Engineer as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Ujjwal, Senior Software Engineer as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Alina, Software Engineer as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;never-interview-alone&quot;&gt;Never Interview Alone&lt;/h3&gt;

&lt;p&gt;Never interview alone. The biggest reason is to protect you and the company legally, but other benefits include checking and balancing biases, and having insights from different perspectives.&lt;/p&gt;

&lt;h2 id=&quot;create-the-interview&quot;&gt;Create the Interview&lt;/h2&gt;

&lt;p&gt;At this point you should have &lt;a href=&quot;#define-the-problem&quot;&gt;defined the problem&lt;/a&gt;, &lt;a href=&quot;#create-a-job-description&quot;&gt;created a job description&lt;/a&gt;, &lt;a href=&quot;#core-team-and-backups&quot;&gt;formed the Core Team&lt;/a&gt;, and have an &lt;a href=&quot;#rounds-and-sessions&quot;&gt;interview process&lt;/a&gt; in place. Now you can create the actual interview for each round. Your goal in each round is to accurately assess the candidate and answer any questions or risks you and your team have. You use questions, scenarios and challenges to do this and, as always, we create documentation for each interview.&lt;/p&gt;

&lt;h3 id=&quot;technical-interview&quot;&gt;Technical Interview&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Does the candidate have the skills, qualities, and attributes required to be successful?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I like to start with the Technical Interview because that is the easiest to assess. Otherwise, you may really like the person just to learn later on that they can‚Äôt do the job.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If we are using a GitHub repo for our interviews, I‚Äôd call this document something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;technical-interview.md&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;questions&quot;&gt;Questions&lt;/h4&gt;

&lt;p&gt;Create a pool of 10-20 questions that your team feels will best help you assess the candidate. These are usually &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;open questions&lt;/code&gt; which allow the candidate to answer with stories and examples, but also allows you to see their thoughts, beliefs, strategies, and philosophies.&lt;/p&gt;

&lt;p&gt;Try to avoid closed questions. You won‚Äôt get a lot of insight from them. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Do you think bug counts are a good way to evaluate a tester?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The spirit of question is there, but it‚Äôs pretty obvious what the answer is - NO! Instead, turn it into an open question to really dive into what they think:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;How would you evaluate a tester to know if they are good or great?
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;This means you will get different answers from each candidate which can make it difficult to compare, but that‚Äôs much better than having 10 candidates say ‚Äúno‚Äù to the closed question.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I asked the QAP Community which questions they like to ask Testers in an interview, and here are some of the results which we can add to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Questions&lt;/code&gt; section in the doc:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do you stay up-to-date on the current trends in testing?&lt;/li&gt;
  &lt;li&gt;How would you test &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;X&lt;/code&gt;? (replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;X&lt;/code&gt; with things like &lt;em&gt;Vending Machine&lt;/em&gt;, &lt;em&gt;Rubik‚Äôs Cube&lt;/em&gt;, &lt;em&gt;Water Bottle&lt;/em&gt;, etc.)&lt;/li&gt;
  &lt;li&gt;How do you start your work day?&lt;/li&gt;
  &lt;li&gt;If you could own the entire dev process from Planning to Release, what would the ideal process look like in order to deliver the highest quality output?&lt;/li&gt;
  &lt;li&gt;Tell me about a time when you have disagreed with a dev on a requirement. How did you resolve it?&lt;/li&gt;
  &lt;li&gt;How do you establish acceptance criteria with test plans and test cases?&lt;/li&gt;
  &lt;li&gt;Where do quality gates live and how do you establish them?&lt;/li&gt;
  &lt;li&gt;What is the best use of automation for software quality?&lt;/li&gt;
  &lt;li&gt;How would you maintain bugs and track them?&lt;/li&gt;
  &lt;li&gt;What CI/CD tools are you familiar with? How did QA interact with those tools?&lt;/li&gt;
  &lt;li&gt;How did test automation run within the software delivery pipelines?&lt;/li&gt;
  &lt;li&gt;How do you stay motivated?&lt;/li&gt;
  &lt;li&gt;How do you deal with changes in work priorities and stay organized?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a good starting list, and will probably change later, but you don‚Äôt need to fit all of them in an interview. You may only have time for 5-10 questions, but you can pull from this list and see which questions will be most effective for any given candidate.&lt;/p&gt;

&lt;h4 id=&quot;scenarios&quot;&gt;Scenarios&lt;/h4&gt;

&lt;p&gt;In this section, add 3-5 scenarios that pose a problem that the candidate must work out a solution(s) to. The candidate is now designing and implementing theoretical ideas and solutions while having to describe why.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You join a team that is looking to add Bitcoin as a new payment option at checkout. They want your experience and expertise to make sure this is done correctly since Payments is a crucial service to the business. They are starting on the design and strategy before doing any coding. How would you start?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They have context and the beginning of a scenario, but this can go &lt;em&gt;so many ways&lt;/em&gt;, so you need to define what you‚Äôre looking for with this scenario. Are you hoping they say that they will add automated tests using Cucumber? What if they never mention Cucumber and mainly talk about risk storming and requirements gathering at the beginning? Would they fail your scenario or not?&lt;/p&gt;

&lt;p&gt;I look for a few things when it comes to scenarios, but here are some examples to give you some inspiration:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do they ask questions? If so, which questions do they ask?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The scenario provides a good amount of context, but there are still unknowns. I‚Äôve had candidates ask me a wide range of questions with this scenario:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Do we have wireframes for what this is supposed to look like?&lt;/li&gt;
  &lt;li&gt;Why are we adding Bitcoin as a payment option? What about other cryptocurrencies?&lt;/li&gt;
  &lt;li&gt;How many people will be working on this with me?&lt;/li&gt;
  &lt;li&gt;What is the timeframe?&lt;/li&gt;
  &lt;li&gt;Do we have existing tests for the Payment Service and other payment options?&lt;/li&gt;
  &lt;li&gt;Is this web-only or do we have a mobile app?&lt;/li&gt;
  &lt;li&gt;What business metrics will help us know if this new feature is successful? For example, do they hypothesize that 25% of transactions will come from Bitcoin?&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Which testing activities do they gravitate to? What do they focus on?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An unfortunately common response I get is the candidate will begin to list a large amount of test cases. &lt;em&gt;‚ÄúI would test it in Dark Mode‚Äù&lt;/em&gt;, &lt;em&gt;‚ÄúI would checkout with sufficient bitcoin funds and insufficient bitcoin funds‚Äù&lt;/em&gt;, etc. Yes, I want testers to think outside the box and be creative enough to design tests like that, but not yet. This tells me that they are more used to writing a bunch of test cases and then executing them ‚Äúregression-style‚Äù which I don‚Äôt think is very valuable long-term.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What kind of Tester are they? What does Holistic Quality mean to them?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The best testers I know are able to take a scenario like this and walk through everything they‚Äôd do from the inception of the idea all the way to deploying and observing it in Production. There is more to testing and quality than the bitcoin payment option working when I test it!&lt;/p&gt;

&lt;p&gt;And this is only the beginning of the scenario! As they ask questions and we progress in our &lt;em&gt;theoretical&lt;/em&gt; scenario, I continue to add more obstacles to it. For example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ok, now the feature is implemented and tested. We‚Äôre ready to push to Production! Now what do you do?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see, you can take these scenarios as far and as deep as you need to give you all the insights required to assess the candidate. Get creative with Scenarios!&lt;/p&gt;

&lt;h4 id=&quot;challenges&quot;&gt;Challenges&lt;/h4&gt;

&lt;p&gt;These would be things like coding challenges. You can think of it as an exercise that has a pretty clear input and output. For certain roles, you might not have any challenges or exercises and that‚Äôs totally ok! However, many roles - especially programming roles - will usually have at least one challenge.&lt;/p&gt;

&lt;p&gt;Now, this can take many forms and the most common (as of this writing) are white board challenges and homework assignments. To be clear, I DO NOT like whiteboarding or homework assignments!&lt;/p&gt;

&lt;h5 id=&quot;whiteboard-challenge&quot;&gt;Whiteboard Challenge&lt;/h5&gt;

&lt;p&gt;This is where the interviewer poses a challenge and the candidate uses a marker and whitebaord to solve it. As programmers, we use tools and apps to write code and build software. So when an interviewer asks us to write code with a marker, without the tools we‚Äôre used to, how is that an accurate assessment of the candidate? It‚Äôs not, and puts the candidate in a difficult situation that only adds more stress and makes a lower quality experience for them.&lt;/p&gt;

&lt;h5 id=&quot;homework-assignment&quot;&gt;Homework Assignment&lt;/h5&gt;

&lt;p&gt;Ok, then let‚Äôs give the candidate a project to work on at home so they can use their tools and do things on their own time without having to be in front of people. It sounds great, but these types of assignments are usually larger and require hours or days for the candidate to finish it. I‚Äôve seen inteviewers give assignments and say, ‚ÄúThis should only take about 2 hours, but get it to us as soon as you can‚Äù.&lt;/p&gt;

&lt;p&gt;The interviewer may see the assignment as small and easy, but the candidate will spend way more time because they want to submit the highest quality solution they can. They might spend the next 24 hours on this and lose sleep and time with their family because they want to do it right. It makes for multiple days of stress for the candidate which leads to a lower quality experience for them.&lt;/p&gt;

&lt;h5 id=&quot;pair-and-collaborate&quot;&gt;Pair and Collaborate&lt;/h5&gt;

&lt;p&gt;Instead, I like to pose a challenge to the candidate and pair with them on a solution! I will show two examples that I have used in the past to help assess programming and design ability - especially for Automation Engineers. I use Python, the language of Data and Automation, even if they don‚Äôt know Python. I‚Äôm not testing their Python skills, but rather:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do they collaborate with me?&lt;/li&gt;
  &lt;li&gt;What questions do they ask?&lt;/li&gt;
  &lt;li&gt;Are the humble?&lt;/li&gt;
  &lt;li&gt;Can they take constructive criticism?&lt;/li&gt;
  &lt;li&gt;Do they know enough about programming principles to be successful in the role (example: design patterns, testing techniques, debugging)?&lt;/li&gt;
  &lt;li&gt;Can they walk through code and explain their decisions?&lt;/li&gt;
  &lt;li&gt;Can they describe pros and cons of different approaches?&lt;/li&gt;
  &lt;li&gt;and more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What makes this unique is that I share my screen and drive the keyboard. In other words, I will do all the coding and typing. They just need to describe what they‚Äôd like to do and I will do my best to interpret and implement it. We give each other feedback and use any tools to solve the problem (example: VS Code, search for answers on Google, etc). This takes a lot of the pressure off of them and we usually have a good time :)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I‚Äôve been told by many candidates that this part has been the best ‚Äúcoding challenge‚Äù that they‚Äôve ever experienced!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;find-the-bug-and-fix-it&quot;&gt;Find the Bug and Fix It&lt;/h5&gt;

&lt;p&gt;For this challenge, I provide a function that takes a string and returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;True&lt;/code&gt; if it is a &lt;em&gt;palindrome&lt;/em&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;False&lt;/code&gt; if not. Then there are test functions that use different examples to test the function. Here‚Äôs the code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_aa_is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'aa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_ab_is_not_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ab'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_cac_is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cac'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are 3 steps to this challenge:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Identify the flaw in the code (there‚Äôs a BIG one)&lt;/li&gt;
  &lt;li&gt;Prove it by writing a new, failing test&lt;/li&gt;
  &lt;li&gt;Fix the code so all tests pass&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then I share my screen and ask, ‚Äúwhere do you want to start?‚Äù. I time box this challenge for 10 minutes. It may look very simple, but when you‚Äôre in a high pressure environment, it‚Äôs easy for nerves to make this harder. Yes, this is an easier one, but it really breaks the ice and gets the candidate comfortable and ready for the next challenge which is a lot more complex.&lt;/p&gt;

&lt;h5 id=&quot;consume-a-rest-api-to-build-the-game-of-war&quot;&gt;Consume a REST API to build the game of War&lt;/h5&gt;

&lt;p&gt;In the next challenge, this is what they have to work with at the beginning:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Build the game of War!

Using https://deckofcardsapi.com, build a Console Game of the popular game called &quot;War&quot;

WAR
---
1. Shuffle a deck of face cards
2. Draw two cards
3. The highest card wins!

Requirements:
-------------
* There must be tests!
* Although 100% Code Coverage is good to have, we want to have quality tests that cover the behaviors we care about
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By this time, the candidate is aware of how the pairing and collaboration with me works, but this challenge is more difficult. In my opinion, Automation Engineers should know way more than just Selenium or Cypress, and this challenge helps me assess how good their Software Engineering skills are rather than how good you are with a single library. The beauty of challenges like this is you can steer it in different directions or increase or decrease the difficulty as needed.&lt;/p&gt;

&lt;p&gt;For example, you can make Test Driven Development (TDD) a requirement, or ask to optimize the performance of the program. You can open Postman if you want to see their familiarity with that tool or give them hints to guide them to a solution. It‚Äôs up to you as the Driver and Interviewer!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As always, your challenges should help answer questions and risks you have about the candidate so you can confidently make a decision.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;culture-fit&quot;&gt;Culture Fit&lt;/h3&gt;

&lt;p&gt;If done right, there shouldn‚Äôt be any more ‚Äútechnical‚Äù assessment required for the final round. If so, make sure this interview team is aware of the gaps or questions you want to have answered so they can address it. Otherwise, it‚Äôs time to see if this person is a good match for us in terms of people and process.&lt;/p&gt;

&lt;p&gt;You often hear the term ‚Äúculture‚Äù at a company, but what does that mean exactly? Well, as with many things, it depends. However, company culture comes from a few things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Company&lt;/li&gt;
  &lt;li&gt;Leaders&lt;/li&gt;
  &lt;li&gt;Goals&lt;/li&gt;
  &lt;li&gt;Values&lt;/li&gt;
  &lt;li&gt;People&lt;/li&gt;
  &lt;li&gt;Products&lt;/li&gt;
  &lt;li&gt;Customers&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;What matters to the company and its leaders, and what do they do about those things?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, if I say that diversity and inclusion matter to me and my company, then I better have examples of how we put that into action and &lt;em&gt;make it matter&lt;/em&gt;. If I say that quality and doing things right matter here, but people commonly work 10-12 hour days because we care most about our burndown chart and velocity, our actions say that our culture is more about output and deadlines.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you‚Äôre the candidate, you need to ask questions to make sure the company is a good fit for you too!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You and your Interview Team should know what these goals and values are. You should have an idea of what the culture really is or what you want it to be. People make the culture - especially leaders - so you want the candidate to resonate and align with the culture so it continues to grow in the right direction.&lt;/p&gt;

&lt;p&gt;Just like the &lt;a href=&quot;#technical-interview&quot;&gt;Technical Interview&lt;/a&gt;, come up with questions and scenarios (maybe not challenges) to help you assess the kind of person they are, and if they have the qualities and attributes you‚Äôre looking for.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How do they handle adversity?&lt;/li&gt;
  &lt;li&gt;How would they convince upper management of an initiative they want to start?&lt;/li&gt;
  &lt;li&gt;What kind of leader would they be?&lt;/li&gt;
  &lt;li&gt;How would they excel in their role?&lt;/li&gt;
  &lt;li&gt;Will they uplift others around them or bring them down?&lt;/li&gt;
  &lt;li&gt;How do they learn?&lt;/li&gt;
  &lt;li&gt;How do they work with others?&lt;/li&gt;
  &lt;li&gt;Are they trustworthy and accountable?&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;conduct-the-technical-interview&quot;&gt;Conduct the Technical Interview&lt;/h1&gt;

&lt;p&gt;Preparation is complete and a candidate is scheduled for the &lt;a href=&quot;#technical-interview&quot;&gt;Technical Interview&lt;/a&gt;! You should have a resume (aka ‚ÄúCV‚Äù) from the candidate and hopefully a portfolio. Create a new doc for the candidate (maybe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;candidate_name.md&lt;/code&gt;) to track ratings, performance, and notes.&lt;/p&gt;

&lt;h2 id=&quot;review-the-resume-and-portfolio&quot;&gt;Review the Resume and Portfolio&lt;/h2&gt;

&lt;p&gt;Make sure each Interview Team member gets a copy of the resume and portfolio, and have each member go through them on their own. While doing this, take notes and write down questions and concerns you have about the candidate against the role we‚Äôre hiring for.&lt;/p&gt;

&lt;p&gt;For example, let‚Äôs say that this is the summary the candidate has for their previous role:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create and executed test cases utilizing Azure DevOps to verify Web Applications specifications are met by analyzing expected input/output results.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API testing using Postman&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Executed various testing methods such as black box, functional, regression and user acceptance testing to validate requirements are met.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Created defects found in the application and escalate to the appropriate developer&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensured that validated deliverables meet functional and design specifications&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Interacted and communicated with business analysts, project managers, developers, internal/external clients and senior management to manage issues throughout the software testing life cycle using Agile and Waterfall methodologies&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Take a moment to write down things you like and questions or concerns you have about this person.&lt;/p&gt;

&lt;p&gt;Some of my notes may look like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Azure DevOps (ADO)&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Did they actually work with ADO or were tests executed there and that‚Äôs it?&lt;/li&gt;
      &lt;li&gt;Which services within ADO are they familiar with?&lt;/li&gt;
      &lt;li&gt;We use AWS instead. Would they be able to make the switch and pick it up?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;verify Web Application specifications are met&quot;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;How did they come up with these specs?&lt;/li&gt;
      &lt;li&gt;Given a spec, how do they know which tests to create?&lt;/li&gt;
      &lt;li&gt;How are they doing CI/CD?&lt;/li&gt;
      &lt;li&gt;What‚Äôs the process for when tests fail?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API testing using Postman&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Excellent! Our second coding challenge should be easier for them.&lt;/li&gt;
      &lt;li&gt;Was it as REST service? or gRPC, GraphQL, etc.&lt;/li&gt;
      &lt;li&gt;We use microservices and serverless architectures. Do they have experience in that kind of ecosystem?&lt;/li&gt;
      &lt;li&gt;How did they test their APIs (manual and automated)?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Executed various testing methods...&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;It all seems like functional styles of testing. What else have they done? (ie Performance, Accessibility, Monitoring)&lt;/li&gt;
      &lt;li&gt;They separate black box, functional, regression, and user acceptance, but those all seem really similar to me. I‚Äôd love to hear what they did and how.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Created defects found in the application...&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;What was their bug/defect processes? Did they like it? What would they change?&lt;/li&gt;
      &lt;li&gt;How did they triage and prioritize bugs/defects?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ensured that validated deliverables meet functional and design specifications&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Didn‚Äôt they say this already before?&lt;/li&gt;
      &lt;li&gt;What is a validated deliverable? Wouldn‚Äôt that mean it meets functional and design specifications?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Interacted and communicated with [stakeholders] to manage issues throughout the software testing life cycle...&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Having a software testing life cycle feels like traditional testing. I want to hear how they describe this and what the pros and cons are compared to more modern approaches&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...using Agile and Waterfall methodologies&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;I want them to expand on these methodologies and their philosophies around Agile and overall processes and practices&lt;/li&gt;
      &lt;li&gt;What would the ideal ‚ÄúAgile‚Äù environment look like for them?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just from this small, bulleted summary, I can get a lot of insights into what they did and how they think. It says a lot even though there are only 6 lines. There are questions and concerns that are more &lt;em&gt;severe&lt;/em&gt; than others, but I can now share this list with the rest of my team and compare notes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are a candidate, make sure every section and line in your resume is impactful and meaningful. If you‚Äôd like help with your resume, please reach out in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#general&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#career-prep&lt;/code&gt; channels in our Slack group, or create a &lt;a href=&quot;https://github.com/qa-at-the-point/base/discussions&quot;&gt;Discussion&lt;/a&gt; in our Knowledge Base.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our Job Description and recruiters tell the candidate to submit a portfolio as well. This may be a single repo, a portfolio website, or an entire GitHub profile. We review it the same way. Look through the portfolio, takes notes and write questions, compare notes with the team, and use the portfolio and notes in the interview.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are a candidate, you &lt;em&gt;should&lt;/em&gt; have a portfolio. You are doing yourself a huge disservice if you don‚Äôt have one. If you‚Äôd like help with your portfolio, please reach out in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#general&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#career-prep&lt;/code&gt; channels in our Slack group, or create a &lt;a href=&quot;https://github.com/qa-at-the-point/base/discussions&quot;&gt;Discussion&lt;/a&gt; in our Knowledge Base.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;curate-the-interview&quot;&gt;Curate the Interview&lt;/h2&gt;

&lt;p&gt;At this point, we have a great list of questions, scenarios, and challenges to assess the candidate. We also have a list of risks and concerns. However, we have a finite amount of time to interview. So, with your team, select which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;questions&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scenarios&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;challenges&lt;/code&gt; that will help you the best.&lt;/p&gt;

&lt;p&gt;To help, I use a simple &lt;strong&gt;5 Star&lt;/strong&gt; rating for each candidate. After reviewing the candidate‚Äôs resume and portfolio, each member provides a &lt;em&gt;star rating&lt;/em&gt;. For example, Dan may start with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4/5&lt;/code&gt; and I may have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3/5&lt;/code&gt;. We discuss why we gave the star rating (which gets the team aligned) and makes the curation easier.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ideally, when we say YES to someone, they are 5/5. However, you‚Äôre really looking to check and resolve every question, concern, and risk you have so you are excited about the candidate. Curate your interview to do exactly this. The best feeling is when the entire Interview Team is genuinely excited about the candidate and ready to hire them!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;0 stars&lt;/strong&gt;: Strong NO. I would never want to work with this person (very rare)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;1 star&lt;/strong&gt;: No. Not what we‚Äôre looking for (rare)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2 stars&lt;/strong&gt;: No. Not quite ready. Too many concerns and risks unresolved (common)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;3 stars&lt;/strong&gt;: On the fence. More investigation needed since there are still unresolved concerns and risks (common)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;4 stars&lt;/strong&gt;: Yes. Move the candidate to the next round since they resolve most concerns and risks (common)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;5 stars&lt;/strong&gt;: Strong YES! Few concerns and risks. Can we hire the candidate right now (rare, but so exciting!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;run-the-interview&quot;&gt;Run the Interview&lt;/h2&gt;

&lt;p&gt;Finally, it‚Äôs time to meet the candidate for the infamous Technical Interview. We‚Äôve done all the planning and preparation in previous sections, so I‚Äôll focus on agenda, flow, and tips in this section.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;COVID forced many things to be remote, so this will come from the perspective of a remote interview. There‚Äôs not much difference besides maybe giving the candidate a small tour of the building and amenities.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;agenda&quot;&gt;Agenda&lt;/h3&gt;

&lt;p&gt;Your agenda may vary, but I‚Äôll show a 2hr format as a good starting place. Make sure to provide an estimated timebox for each part.&lt;/p&gt;

&lt;h4 id=&quot;welcome-and-intro-5-min-driver&quot;&gt;Welcome and Intro (5 min) [Driver]&lt;/h4&gt;

&lt;p&gt;The Driver welcomes the candidate, introduces themselves and the other interviewers, and presents the agenda. Then ask the candidate to introduce themselves.&lt;/p&gt;

&lt;h4 id=&quot;move-to-questions-30-min-interviewer&quot;&gt;Move to Questions (30 min) [Interviewer]&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Driver ‚Äúpasses the mic‚Äù to the Interviewer to start on our curated list of &lt;a href=&quot;#questions&quot;&gt;Questions&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is common to dive deeper into a question or follow a tangent. That‚Äôs ok and recommended since they usually help resolve concerns and risks. Just know that you will run out of time to ask other questions and the Support may nudge or remind you about the time box.&lt;/p&gt;

&lt;p&gt;I‚Äôve had times where I had 10 questions ready to go and only got through 4 or 5 of them because we dove deeper and went on tangents! Always do what feels natural.&lt;/p&gt;

&lt;h4 id=&quot;move-to-scenarios-25-min-driver--interviewer&quot;&gt;Move to Scenarios (25 min) [Driver | Interviewer]&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Interviewer ‚Äúpasses the mic‚Äù to the Driver to start on our curated list of &lt;a href=&quot;#scenarios&quot;&gt;Scenarios&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Similar to questions, you can take Scenarios as deep or as wide as you need. Usually the Candidate will have a lot of questions (as they should), so be sure to have answers for all of them. You may need to improvise on the fly to keep the scenario and context moving!&lt;/p&gt;

&lt;h4 id=&quot;move-to-challenges-30-min-interviewer&quot;&gt;Move to Challenges (30 min) [Interviewer]&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Interviewer shares their screen with the first challenge up and ready to go.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I use VS Code as the editor, but use what works for you. Remember, we aren‚Äôt assessing the Candidate‚Äôs ‚ÄúVS Code ability‚Äù, so it‚Äôs ok if they‚Äôve never used it before. We care about how they approach the problem, the questions they ask, and how they work with me.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I drive the mouse and keyboard while the Candidate describes what they want. With their ideas and instructions, I try to do it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Similar to Scenarios, we can take each challenge as deep or as wide as we‚Äôd like, but collaboration and guidance from our side (without giving them the straight solution) is key to the challenge being successful. For example, if the candidate gets stuck on something or goes quiet, ask questions or provide hints that will help them move to the next step on their own.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1st Challenge (10 min)&lt;/li&gt;
  &lt;li&gt;2nd Challenge (20 min)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second challenge is difficult to complete in 20 minutes (some do, which usually gets them a 5/5 rating on the challenge). At the beginning of the second challenge, I tell the Candidate that we most likely won‚Äôt finish, but that‚Äôs ok. Instead, ‚Äúlet‚Äôs get &lt;strong&gt;as far as we can&lt;/strong&gt; doing it the way &lt;strong&gt;you feel is best&lt;/strong&gt;‚Äù.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Not suprisingly, the Candidates that use a TDD approach are more likely to finish the challenge with a working solution. Candidates that skip tests and go directly into creating the program almost always get stuck with no easy way to workaround or resolve it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;candidate-questions-10-min-driver&quot;&gt;Candidate Questions (10 min) [Driver]&lt;/h4&gt;

&lt;p&gt;Give the Candidate 10 minutes to ask their questions. By default, the Driver will answer the questions unless:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Candidate directs the question to a specific person&lt;/li&gt;
  &lt;li&gt;The Driver wants a specific person to answer it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This leaves control of the flow with the Driver. It‚Äôs extremely rare that a ‚Äúrisky‚Äù question is asked, but just in case, the Driver can intercept or redirect as needed. For example, I once had a candidate ask how one of our proprietary systems worked. One of the senior engineers started diving into details and I had to quickly cut them off and intercept the question. I still provided an answer, but it was one that also had the business‚Äôs interests in mind.&lt;/p&gt;

&lt;h4 id=&quot;outtro-and-next-steps-5-min-driver&quot;&gt;Outtro and Next Steps (5 min) [Driver]&lt;/h4&gt;

&lt;p&gt;Thank the Candidate for their time and provide next steps.&lt;/p&gt;

&lt;p&gt;I usually say something along the lines of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Thank you, X, for taking the time to meet with us today! When you exit the call, we‚Äôre gonna stay after and talk some more, but give us 2-3 business days to get back to you. I‚Äôll be sending you an email at example@test.com with the next steps, but feel free to reach out if there‚Äôs anything else you‚Äôd like to discuss. Thanks again and have a quality day!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;post-interview&quot;&gt;Post Interview&lt;/h2&gt;

&lt;p&gt;With the Candidate gone, spend another 10-15 minutes as a team to assess the Candidate‚Äôs performance and hold a small retrospective.&lt;/p&gt;

&lt;h3 id=&quot;assess&quot;&gt;Assess&lt;/h3&gt;

&lt;p&gt;With the interview fresh in our minds, talk about the Candidate and how they did. By the end, each team member should have a new star rating for the candidate. I like to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fist of Five&lt;/code&gt; to quickly gauge this. Each team member raises their hand and shows the number of fingers (aka stars) they want to give.&lt;/p&gt;

&lt;p&gt;I discussed the star rating in the &lt;a href=&quot;#curate-the-interview&quot;&gt;Curate the Interview&lt;/a&gt; section, but we need to make a decision to reject the candidate or move them to the next round:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0-2 stars: Reject. The candidate was unable to convice the team and resolve questions, concerns and risks.&lt;/li&gt;
  &lt;li&gt;3: Reject or Next Round. This usually leads to a rejection because ‚Äúbeing on the face‚Äù is a red flag. What‚Äôs holding you back? Discuss as a team.&lt;/li&gt;
  &lt;li&gt;4-5: Next Round. The team is excited about the candidate and wants to move to the next round.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;retrospect&quot;&gt;Retrospect&lt;/h3&gt;

&lt;p&gt;With a decision in place, now it‚Äôs time to have a mini retrospective to assess how &lt;em&gt;we&lt;/em&gt; did as an Interview Team.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What did we do well?&lt;/li&gt;
  &lt;li&gt;What didn‚Äôt go so well?&lt;/li&gt;
  &lt;li&gt;How will we improve?&lt;/li&gt;
  &lt;li&gt;What will we change or try next time?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with any retrospective, we want to genuinely reflect how we did so we can learn and get better. Interviewing isn‚Äôt easy, but feedback is important for improvement.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;conduct-the-culture-interview&quot;&gt;Conduct the Culture Interview&lt;/h1&gt;

&lt;p&gt;The agenda and flow are very similar to the &lt;a href=&quot;#conduct-the-technical-interview&quot;&gt;Technical Interview&lt;/a&gt;, but now you‚Äôre going to use the questions, scenarios and challenges you defined in the &lt;a href=&quot;#culture-fit&quot;&gt;Culture Fit&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;For non-remote positions, this is where I‚Äôd spend a good amount of time giving the candidate a tour and ‚Äúshowing off‚Äù what we have to offer. We want them to be excited about the company and opportunity, and a tour is a great ice-breaking way to do this!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Besides that, you may have them meet key team members and leaders or visit key points in the building before going into the meeting room to start the interview.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I like to take people to lunch or coffee! Be creative with how you attract talent and make people feel special. This round, for me, would look like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Meet at office, go eat lunch with candidate and Interview Team (1 hr)&lt;/li&gt;
  &lt;li&gt;Tour of Building (15 min)&lt;/li&gt;
  &lt;li&gt;Questions (30 min)&lt;/li&gt;
  &lt;li&gt;Scenarios (10 min)&lt;/li&gt;
  &lt;li&gt;Candidate Questions (10 min)&lt;/li&gt;
  &lt;li&gt;Outtro and Next Steps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then &lt;a href=&quot;#assess&quot;&gt;Assess&lt;/a&gt; and &lt;a href=&quot;#retrospect&quot;&gt;Retrospect&lt;/a&gt; again!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;final-decision&quot;&gt;Final Decision&lt;/h1&gt;

&lt;p&gt;All the evidence is gathered and it‚Äôs time to make a final decision. Hopefully it‚Äôs a YES so you can send that awesome email and get other accounting items finalized (stocks, salary, sign-on bonus, etc)!&lt;/p&gt;

&lt;p&gt;I hope this post was helpful for you to get a standardized Interview Process in place. Anyone can interview, but it‚Äôs hard to interview well. Now you have ideas, concepts, and practical examples to make a process where you conduct high quality interviews.&lt;/p&gt;

&lt;p&gt;Ô∏èüéâ Happy interviewing and have a quality day!&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Feb 2022 15:25:00 +0000</pubDate>
        <link>https://base.qap.dev/blog/how-to-conduct-high-quality-interviews/</link>
        <guid isPermaLink="true">https://base.qap.dev/blog/how-to-conduct-high-quality-interviews/</guid>
      </item>
    
      <item>
        <title>Working with QAP's GitHub</title>
        <description>&lt;p&gt;The QA at the Point (QAP) Knowledgebase lives within the &lt;a href=&quot;https://github.com/qa-at-the-point&quot;&gt;qa-at-the-point&lt;/a&gt; organization on GitHub. It consists of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All of the repos within the QAP GitHub org&lt;/li&gt;
  &lt;li&gt;The main &lt;a href=&quot;https://base.qap.dev&quot;&gt;https://base.qap.dev&lt;/a&gt; website&lt;/li&gt;
  &lt;li&gt;And the &lt;a href=&quot;https://github.com/qa-at-the-point/base&quot;&gt;base&lt;/a&gt; repo which includes:
    &lt;ul&gt;
      &lt;li&gt;The code for the main website (ie posts/articles)&lt;/li&gt;
      &lt;li&gt;An &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Issues&lt;/code&gt; tab to submit requests, bugs, etc.&lt;/li&gt;
      &lt;li&gt;A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Discussions&lt;/code&gt; tab to ask questions, answer things, or contribute to a conversation&lt;/li&gt;
      &lt;li&gt;A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wiki&lt;/code&gt; tab for everything else!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This post will cover the QAP org on GitHub so you know where to go, what‚Äôs included, and how you can get answers to your questions!&lt;/p&gt;

&lt;h4 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#create-a-free-account&quot;&gt;Create a Free Account&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#qa-at-the-point-organization&quot;&gt;QA at the Point Organization&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#get-added&quot;&gt;Get Added&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#qap-base-repo&quot;&gt;QAP Base Repo&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#code&quot;&gt;Code&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#issues&quot;&gt;Issues&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#discussions&quot;&gt;Discussions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#learning-git-and-github&quot;&gt;Learning Git and GitHub&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;freecodecamp.org Tutorial&lt;/li&gt;
      &lt;li&gt;GitHub Learning Lab&lt;/li&gt;
      &lt;li&gt;Git Tutorial from Test Automation University&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#gitpod&quot;&gt;GitPod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-a-free-account&quot;&gt;Create a Free Account&lt;/h2&gt;

&lt;p&gt;Creating a GitHub account is completely free! There are paid versions, but working on Open Source (including the QAP Knowledgebase) only requires the free version.&lt;/p&gt;

&lt;p&gt;There are many ‚Äúhow to‚Äù guides and videos on this topic, so I‚Äôll reference &lt;a href=&quot;https://www.wikihow.com/Create-an-Account-on-GitHub&quot;&gt;this one from Wikihow&lt;/a&gt; that includes screenshots along with the steps.&lt;/p&gt;

&lt;h2 id=&quot;qa-at-the-point-organization&quot;&gt;QA at the Point Organization&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/qa-at-the-point&quot;&gt;github.com/qa-at-the-point&lt;/a&gt; homepage is a good starting place to see all that‚Äôs happening and available in the knowledgebase. Each repo will have a specific purpose, but the &lt;a href=&quot;https://github.com/qa-at-the-point/base&quot;&gt;base repo&lt;/a&gt; is‚Ä¶ well, the ‚Äúbase‚Äù of the knowledgebase.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° You don‚Äôt have to be in the QAP org to access or use the knowledgebase. It‚Äôs free and public for anyone to use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;get-added&quot;&gt;Get Added&lt;/h4&gt;

&lt;p&gt;With a GitHub account, you can now be added to the &lt;a href=&quot;https://github.com/qa-at-the-point&quot;&gt;github.com/qa-at-the-point&lt;/a&gt; org!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° Do this if you would like to be a maintainer or contribute to the knowledgebase more frequently. Otherwise, pull requests are welcome from anyone!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our &lt;a href=&quot;https://join.slack.com/t/qautah/shared_invite/zt-4cbb6q78-J8opsCMlPqOKdef42x9kUw&quot;&gt;Slack&lt;/a&gt; group, reach out to Carlos Kidman and send them your GitHub username to be added.&lt;/p&gt;

&lt;h2 id=&quot;qap-base-repo&quot;&gt;QAP Base Repo&lt;/h2&gt;

&lt;p&gt;The ‚Äúbase‚Äù repo for the entire knowledgebase is this one: &lt;a href=&quot;https://github.com/qa-at-the-point/base&quot;&gt;github.com/qa-at-the-point/base&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° Most communication for the knowledgebase will happen in the base repo and in Slack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;code&quot;&gt;Code&lt;/h4&gt;

&lt;p&gt;The codebase within the repo is used for the &lt;a href=&quot;https://base.qap.dev&quot;&gt;base.qap.dev&lt;/a&gt; website. If you want to add a post, refer to this post explaining how to do so: &lt;a href=&quot;https://base.qap.dev/how-to-make-a-post&quot;&gt;How to make a Post&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;issues&quot;&gt;Issues&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/qa-at-the-point/base/issues&quot;&gt;Issues Tab&lt;/a&gt; is used to create requests, bugs, etc. For example, if you would like someone from the community to add a post about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Security&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accessibility Testing&lt;/code&gt;, create an Issue with the questions or info you‚Äôre looking for.&lt;/p&gt;

&lt;p&gt;We can track these Issues and find experts and/or testers to help create something for it. It could be a post, a wiki case study, a presentation for our monthly meetup, or a hands-on workshop for our weekly classes.&lt;/p&gt;

&lt;h4 id=&quot;discussions&quot;&gt;Discussions&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/qa-at-the-point/base/discussions&quot;&gt;Discussions Tab&lt;/a&gt; is used to ask questions and have conversations with the QAP community. The Discussions board behaves very similarly to StackOverflow, but would be specifically for QAP, testing, quality, etc.&lt;/p&gt;

&lt;p&gt;Like StackOverflow, you can search discussions, mark a response as the accepted answer, vote up responses, and more! Slack is great for things like larger communications and informal conversations, but you wouldn‚Äôt search Slack for previously answered questions‚Ä¶&lt;/p&gt;

&lt;h4 id=&quot;wiki&quot;&gt;Wiki&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/qa-at-the-point/base/wiki&quot;&gt;Wiki Tab&lt;/a&gt; is used as a database of files. Posts on the website are more formal and go through our CI/CD processes. They are also in a ‚Äúblog post‚Äù format.&lt;/p&gt;

&lt;p&gt;For example, if you or your company had a &lt;strong&gt;Test Plan Template&lt;/strong&gt; that you wanted to share, it would most likely go in the Wiki. Then you could create a Post, like &lt;em&gt;‚ÄúHow we use Test Plans‚Äù&lt;/em&gt;, which could reference your template in the wiki.&lt;/p&gt;

&lt;h2 id=&quot;learning-git-and-github&quot;&gt;Learning Git and GitHub&lt;/h2&gt;

&lt;p&gt;There are many great guides and videos on how to work with git and GitHub. Instead of re-inventing the wheel, I‚Äôll let the pros teach you instead! Here are some resources that are super helpful:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/the-beginners-guide-to-git-github/&quot;&gt;Beginner‚Äôs Guide to Git and GitHub by freecodecamp.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lab.github.com/&quot;&gt;GitHub Learning Lab by github.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://testautomationu.applitools.com/git-tutorial/&quot;&gt;Git Tutorial by Simon Berner on Test Automation University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gitpod&quot;&gt;Gitpod&lt;/h2&gt;

&lt;p&gt;Gitpod is an open-source Kubernetes application providing prebuilt, collaborative development environments in your browser - powered by VS Code.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° QAP repos will be ‚Äúgitpod ready‚Äù.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For more info, refer to the &lt;a href=&quot;https://www.gitpod.io/docs&quot;&gt;Gitpod Official Docs&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Create an Account on GitHub by Nicole Levine on wikihow.com &lt;a href=&quot;https://www.wikihow.com/Create-an-Account-on-GitHub&quot;&gt;(https://www.wikihow.com/Create-an-Account-on-GitHub)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Beginner‚Äôs Guide to Git and GitHub by freecodecamp.org &lt;a href=&quot;https://www.freecodecamp.org/news/the-beginners-guide-to-git-github/&quot;&gt;(https://www.freecodecamp.org/news/the-beginners-guide-to-git-github/)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GitHub Learning Lab by github.com &lt;a href=&quot;https://lab.github.com/&quot;&gt;(https://lab.github.com/)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Source Control for Test Automation by Simon Berner on Test Automation University &lt;a href=&quot;https://testautomationu.applitools.com/git-tutorial/&quot;&gt;(https://testautomationu.applitools.com/git-tutorial/)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gitpod Documentation &lt;a href=&quot;https://www.gitpod.io/docs&quot;&gt;(https://www.gitpod.io/docs)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;üéâ Have a quality day üéâ&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Jan 2022 12:12:00 +0000</pubDate>
        <link>https://base.qap.dev/blog/working-with-qap-github/</link>
        <guid isPermaLink="true">https://base.qap.dev/blog/working-with-qap-github/</guid>
      </item>
    
      <item>
        <title>How to make a Post</title>
        <description>&lt;p&gt;One of the many ways you can contribute to the QAP community is by creating Posts (aka Articles) for our &lt;a href=&quot;https://base.qap.dev&quot;&gt;QAP Open Source Knowledgebase&lt;/a&gt;. You can either add the post directly to the &lt;a href=&quot;https://github.com/qa-at-the-point/base&quot;&gt;GitHub Repo&lt;/a&gt; or send the post to Carlos Kidman.&lt;/p&gt;

&lt;p&gt;This post is a guide to help you create one yourself, but please reach out if you have questions or need help!&lt;/p&gt;

&lt;h4 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#anatomy-of-a-post&quot;&gt;Anatomy of a Post&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#file-names&quot;&gt;File Names&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#frontmatter&quot;&gt;Frontmatter&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#markdown&quot;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ready-to-submit&quot;&gt;Ready to Submit&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#provide-author-info&quot;&gt;Provide Author Info&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#send-it&quot;&gt;Send it&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#other-considerations&quot;&gt;Other Considerations&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#add-a-category&quot;&gt;Add a Category&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#thumbnail&quot;&gt;Thumbnail&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ready-to-contribute&quot;&gt;Ready to contribute?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;anatomy-of-a-post&quot;&gt;Anatomy of a Post&lt;/h2&gt;

&lt;p&gt;In a nutshell, posts are just markdown files. They also need a ‚Äúmetadata‚Äù section at the top and a specific file name format, but knowing how to write with markdown is 95% of it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° Post files go in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder of the project&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;file-names&quot;&gt;File Names&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° The format is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-[post-name].md&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;The filename starts with the date in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD&lt;/code&gt; format. Use the date you‚Äôd like this to be posted by.&lt;/li&gt;
  &lt;li&gt;Next you have the name of the file and the file extension&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, the file name for this post was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2022-01-20-how-to-make-a-post.md&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;frontmatter&quot;&gt;Frontmatter&lt;/h3&gt;

&lt;p&gt;With the file created, you start by adding a metadata section (aka frontmatter). This is information about the article that Jekyll will use when generating the website.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° This section starts with three dashes and ends with three dashes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, this is the frontmatter I used for this post:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;How&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Post&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Learn&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;how&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;QAP&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Knowledgebase&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;carloskidman&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2022-01-20&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;15:48:00&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;+0000&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;guides&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;testing&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QAP&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;thumbnail&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/assets/img/posts/christina-morillo.jpg&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;thumbnail-caption&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Photo&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Christina&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Morillo&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Pexels&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;thumbnail-alt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Two&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;collaborating&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;silver&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;macbook&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;laptop&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;guides, how to, post, make a post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;usemathjax&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/blog/how-to-make-a-post/&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° Posts &lt;em&gt;must&lt;/em&gt; start with the frontmatter or the post won‚Äôt get rendered ü•≤&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;markdown&quot;&gt;Markdown&lt;/h3&gt;

&lt;p&gt;From there, the rest of the file is pure markdown.&lt;/p&gt;

&lt;p&gt;If you are new to markdown, I recommend starting with this &lt;a href=&quot;https://www.markdownguide.org/basic-syntax/&quot;&gt;Syntax Cheatsheet&lt;/a&gt; and searching other resources.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° I also recommend looking over our &lt;a href=&quot;https://base.qap.dev/styleguide&quot;&gt;Styleguide&lt;/a&gt; so you can see what the syntax will look like on the QAP knowledgebase website!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;ready-to-submit&quot;&gt;Ready to submit&lt;/h2&gt;

&lt;p&gt;Now add all of your wonderful markdown content! Once you‚Äôre ready, we need some remaining pieces before you submit.&lt;/p&gt;

&lt;h3 id=&quot;provide-author-info&quot;&gt;Provide Author Info&lt;/h3&gt;

&lt;p&gt;If you are a new author, then you need to provide some info about you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Author image - This is a small pic of you or an avatar. Branding matters, so do something you‚Äôd be proud of.&lt;/li&gt;
  &lt;li&gt;Author metadata - This is info about you (see below).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° The name of your image and metadata files should match the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; field of the post metadata&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Add your image to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets/img/authors&lt;/code&gt; folder (ex. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;johndoe.png&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Add your metadata file to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_authors&lt;/code&gt; folder (ex. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;johndoe.md&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is an example of a Author Metadata file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;johndoe.md&lt;/code&gt; (you don‚Äôt need all the social links):&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;John Doe&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;johndoe&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;bio&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Hi&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;John,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Developer&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Designer.&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://johndoe.com&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;avatar&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;johndoe.png&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mail@johndoe.com&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;social&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;github&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://github.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;linkedin&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://www.linkedin.com/in/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;youtube&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://www.youtube.com/channel/UCSfLBFFfNU9r6ihfei6VeJw&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;facebook&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://www.facebook.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;twitter&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://www.twitter.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;behance&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://behance.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;instagram&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://instagram.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;medium&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://medium.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;telegram&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://telegram.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dribbble&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://dribbble.com/johndoe&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;flickr&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://flickr.com/johndoe&quot;&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;send-it&quot;&gt;Send it&lt;/h3&gt;

&lt;p&gt;If you are working on the post locally or in gitpod, you can run the web server locally to see what everything will look like before you submit anything. I recommend having the web server running while you‚Äôre writing üòé&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve &lt;span class=&quot;nt&quot;&gt;--livereload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;If you are in the project, make sure you‚Äôve added the post, your author image, and author info. Then submit a pull request.&lt;/li&gt;
  &lt;li&gt;If not, send the markdown file and the author info to Carlos Kidman (via &lt;a href=&quot;https://join.slack.com/t/qautah/shared_invite/zt-4cbb6q78-J8opsCMlPqOKdef42x9kUw&quot;&gt;Slack&lt;/a&gt;, carlos@qap.dev, etc).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;üéâ We will review it, ask for revisions (if needed), and eventually approve and publish it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;other-considerations&quot;&gt;Other considerations&lt;/h2&gt;

&lt;p&gt;There are some other bits and pieces you may need depending on your situation. I will add them to this section, but this isn‚Äôt an exhaustive list. Some are just good ideas like listing sources and adding alt text!&lt;/p&gt;

&lt;h3 id=&quot;add-a-category&quot;&gt;Add a Category&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° Available categories are located in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;categories&lt;/code&gt; folder&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you‚Äôre making a new category all we need to do is,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Create a new file with [your_category_name].md inside the categories folder.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copy categories/testing.md file and replace the content in [your_category_name].md in that. (Please don‚Äôt copy the code below its just sample, since it renders the jekyll syntax dynamically)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Guides&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;your_category_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; Posts by Category : How to make a Post &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;card&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using the category, all the posts associated with the category will be listed on
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:4000/blog/categories/your_category_name&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;thumbnail&quot;&gt;Thumbnail&lt;/h3&gt;

&lt;p&gt;I recommend adding a thumbnail to every post since they‚Äôre not just visual, but also set the tone for the post.&lt;/p&gt;

&lt;p&gt;The frontmatter has a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thumbnail&lt;/code&gt; field that points to a specific folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/assets/img/posts/&lt;/code&gt;. For example, this post uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;christina-morillo.jpg&lt;/code&gt; image so the frontmatter field looks like this:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;thumbnail&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/assets/img/posts/christina-morillo.jpg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;p&gt;üôèüèΩ Please source any images or data (if necessary), and add alt text to images.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;üí° This is a great &lt;a href=&quot;https://code-comments.com/markdown-images-alt-text-and-title/&quot;&gt;blog post by code-comments&lt;/a&gt; on how to do exactly this!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For the post‚Äôs thumbnail image, include the:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thumbnail-caption&lt;/code&gt; - great for sourcing the image (crediting where you got the image from)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thumbnail-alt&lt;/code&gt; - Description of the image for accessibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, this post uses these details:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;thumbnail-caption&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Photo&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Christina&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Morillo&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Pexels&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;thumbnail-alt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Two&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;collaborating&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;silver&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;macbook&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;laptop&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ready-to-contribute&quot;&gt;Ready to contribute?&lt;/h2&gt;

&lt;p&gt;That‚Äôs everything you need to create a post for the &lt;strong&gt;QAP Open Source Knowledgebase&lt;/strong&gt;. Check out our other posts, including this one, under the &lt;a href=&quot;https://github.com/qa-at-the-point/base/tree/main/_posts&quot;&gt;_posts folder&lt;/a&gt; for more examples and inspiration.&lt;/p&gt;

&lt;p&gt;‚úèÔ∏è Happy writing and have a quality day ‚úèÔ∏è&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Jan 2022 15:48:00 +0000</pubDate>
        <link>https://base.qap.dev/blog/how-to-make-a-post/</link>
        <guid isPermaLink="true">https://base.qap.dev/blog/how-to-make-a-post/</guid>
      </item>
    

    
      
        
      
    
      
    
      
        
          <item>
            <title></title>
            <description>&lt;h3&gt;   &lt;/h3&gt;

&lt;div id=&quot;categories&quot;&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#contribute&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/contribute&quot;&gt;contribute&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;contribute&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/working-with-qap-github/&quot;&gt;Working with QAP's GitHub&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/how-to-make-a-post/&quot;&gt;How to make a Post&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#guides&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/guides&quot;&gt;guides&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;guides&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/how-to-make-a-post/&quot;&gt;How to make a Post&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#github&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/github&quot;&gt;github&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;github&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/working-with-qap-github/&quot;&gt;Working with QAP's GitHub&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#git&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/git&quot;&gt;git&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;git&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/working-with-qap-github/&quot;&gt;Working with QAP's GitHub&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#interview&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/interview&quot;&gt;interview&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;interview&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/how-to-conduct-high-quality-interviews/&quot;&gt;How to Conduct High Quality Interviews&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

&lt;/div&gt;

</description>
            <link>https://base.qap.dev/blog/categories/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>Contribute</title>
            <description>&lt;h5&gt; Posts by Category : Contribute &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;

 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;24 Jan 2022&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;/blog/working-with-qap-github/&quot;&gt;Working with QAP's GitHub&lt;/a&gt;&lt;/li&gt;

 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;20 Jan 2022&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;/blog/how-to-make-a-post/&quot;&gt;How to make a Post&lt;/a&gt;&lt;/li&gt;

&lt;/div&gt;
</description>
            <link>https://base.qap.dev/blog/categories/contribute/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>Git</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.git %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;
</description>
            <link>https://base.qap.dev/blog/categories/git/</link>
          </item>
        
      
    
      
        
          <item>
            <title>GitHub</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.github %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;
</description>
            <link>https://base.qap.dev/blog/categories/github/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Guides</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.guides %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://base.qap.dev/blog/categories/guides/</link>
          </item>
        
      
    
      
    
      
    
      
    
      
        
          <item>
            <title>Get Started</title>
            <description>## Getting Started - How to use ‚Äúdevlopr-jekyll‚Äù theme

## What's Jekyll ?

If you aren‚Äôt familiar with Jekyll yet, you should know that it is a static site generator. It will transform your plain text into static websites and blogs. No more databases, slow loading websites, risk of being hacked‚Ä¶just your content. And not only that, with Jekyll you get free hosting with GitHub Pages! If you are a beginner we recommend you start with [Jekyll‚Äôs Docs](https://jekyllrb.com/docs/installation/). Now, if you know how to use Jekyll, let‚Äôs move on to using this theme in Jekyll:

## Watch Tutorial

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/cXBEfpn0qrg?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;


### Steps to create your blog using devlopr-jekyll and Host using Github Pages :

&gt;  **Step 1.**  Fork the repo - [click here](https://github.com/sujaykundu777/devlopr-jekyll/fork)

![Devlopr Jekyll Repo](/assets/img/posts/fork1.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 2.** Use **your-github-username.github.io** as the new repo  ( Replace your-github-username with yours). Remember if you use the name other than your-github-username.github.io , your blog will be built using gh-pages branch.

![Devlopr Jekyll Repo](/assets/img/posts/fork2.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork3.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 3.** Clone the new repo locally to make changes :

![Devlopr Jekyll Repo](/assets/img/posts/fork31.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork32.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork33.PNG){:class=&quot;img-fluid&quot;}

```bash
 $ git clone https://github.com/yourusername/yourusername.github.io
 $ cd yourusername.github.io
 $ code .
```

&gt; **Step 4.** Open the files using VSCode and edit _config.yml and edit with your details:

- _config.yml file - replace with your own details
- _posts - Add your blog posts here
- _includes - You can replace the contents of the files with your data. (contains widgets)
- _assets/img - Add all your images here

![Devlopr Jekyll Repo](/assets/img/posts/fork34.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 5** - Install the development requirements:

### Set up local development environment

1. [Git](https://git-scm.com/)
2. [Ruby](https://www.ruby-lang.org/) and [Bundler](https://bundler.io/)
3. [VSCode](https://code.visualstudio.com/download)

We need ruby and bundler to build our site locally. After installation check if its working:

For ruby :

```bash
$ ruby -v
ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux-gnu]
```
For bundler :

```bash
$ gem install bundler
$ bundler -v
Bundler version 2.2.29
```
Add jekyll :

```bash
$ bundle update
$ bundle add jekyll
```
 This command will add the Jekyll gem to our Gemfile and install it to the ./vendor/bundle/ folder.

You can check the jekyll version

```
$ bundle exec jekyll -v
jekyll 4.2.0
```

&gt; **Step 6.** Install the gem dependencies by running the following command

```bash
$ bundle update
$ bundle install
```

&gt; **Step 7.** Serve the site locally by running the following command below:

```bash
$ bundle exec jekyll serve --watch
```
or you can also serve using :

```bash
$ jekyll serve
```

Visit [http://localhost:4000](http://localhost:4000) for development server

![Devlopr Jekyll Repo](/assets/img/posts/fork41.PNG){:class=&quot;img-fluid&quot;}


### Adding Content

Start populating your blog by adding your .md files in _posts. devlopr-jekyll already has a few examples.

#### YAML Post Example:

```yml
---
layout: post
title: Sample Post
author: Sujay Kundu
date: '2019-05-21 14:35:23 +0530'
category:
        - jekyll
summary: This is the summary for the sample post
thumbnail: sample.png
---

Hi ! This is sample post.

```

#### YAML Page Example:

```yml
---
layout: page
title: Sample Page
permalink: /sample-page/
---

Hi ! This is sample page.
```

#### Editing stylesheet

You‚Äôll only work with a single file to edit/add theme style: assets/css/main.scss.

### Deploy your Changes

Once happy with your blog changes. Push your changes to master branch.

&gt; **Step 8.** Push Your Local Changes

```bash
 $ git add .
 $ git commit -m &quot;my new blog using devlopr-jekyll&quot;
 $ git push origin master
```

Visit your Github Repo settings ! Enable master branch as Github Pages Branch :

![Devlopr Jekyll Repo](/assets/img/posts/fork6.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 9.** Deploy your Blog :

![Devlopr Jekyll Repo](/assets/img/posts/fork7.PNG){:class=&quot;img-fluid&quot;}

&gt; Congrats ! On your new shining Blog !

You can visit the blog using [http://your-github-username.github.io](http://your-github-username.github.io).

</description>
            <link>https://base.qap.dev/get-started/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Interview</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.interview %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;
</description>
            <link>https://base.qap.dev/blog/categories/interview/</link>
          </item>
        
      
    
      
    
      
    
      
    
      
        
          <item>
            <title>Our Sponsors</title>
            <description>Thanks to all the amazing contributors and our Backers for the support.

- [PDQ](https://pdq.com)
</description>
            <link>https://base.qap.dev/sponsors/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Styleguide</title>
            <description>### Blog/Post Styleguide

&lt;hr /&gt;

 &lt;img src=&quot;/assets/img/styleguide.png&quot; class=&quot;img-fluid&quot;&gt;

&lt;p&gt; A visual styleguide to get an idea of how your post will look:
  &lt;span&gt; &lt;b&gt; Bold &lt;/b&gt; , &lt;strong&gt; Strong &lt;/strong&gt;, &lt;em&gt; Emphasis &lt;/em&gt;, &lt;i&gt; Italic &lt;/i&gt; &lt;/span&gt;
&lt;/p&gt;


&lt;p&gt; Heading styles : &lt;/p&gt;

&lt;h1&gt; Hello in h1 ! &lt;/h1&gt;
&lt;h2&gt; Hello in h2 ! &lt;/h2&gt;
&lt;h3&gt; Hello in h3 ! &lt;/h3&gt;
&lt;h4&gt; Hello in h4 ! &lt;/h4&gt;
&lt;h5&gt; Hello in h5 ! &lt;/h5&gt;
&lt;h6&gt; Hello in h6 ! &lt;/h6&gt;

&lt;hr /&gt;
&lt;p&gt; Unordered List &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; List Item 1 &lt;/li&gt;
&lt;li&gt; List Item 2 &lt;/li&gt;
&lt;li&gt; List Item 3 &lt;/li&gt;
&lt;li&gt; List Item 4 &lt;/li&gt;
&lt;li&gt; List Item 5 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; Ordered List &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; List Item 1 &lt;/li&gt;
&lt;li&gt; List Item 2 &lt;/li&gt;
&lt;li&gt; List Item 3 &lt;/li&gt;
&lt;li&gt; List Item 4 &lt;/li&gt;
&lt;li&gt; List Item 5 &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a Block Quote,  It can Expand Multiple Lines &lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;You can use the mark tag to &lt;mark&gt;highlight&lt;/mark&gt; text. &lt;/p&gt;

&lt;p&gt;&lt;del&gt; This line of text is meant to be deleted text &lt;/del&gt; &lt;/p&gt;

&lt;p&gt;&lt;u&gt;This line of text will render as underlined&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;This line of text is meant to be treated as fine print.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This line rendered as bold text.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This line rendered as italicized text.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;abbr title=&quot;attribute&quot;&gt;attr&lt;/abbr&gt;&lt;/p&gt;
&lt;p&gt;&lt;abbr title=&quot;HyperText Markup Language&quot; class=&quot;initialism&quot;&gt;HTML&lt;/abbr&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;div class=&quot;responsive-table&quot;&gt;
&lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;col&quot;&gt;#&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;1&lt;/th&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;2&lt;/th&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;3&lt;/th&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;/div&gt;

&lt;hr /&gt;

&lt;h3&gt; Instagram Embed &lt;/h3&gt;

&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned data-instgrm-permalink=&quot;https://www.instagram.com/p/CBXO7AypXkM/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; data-instgrm-version=&quot;13&quot; style=&quot; background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);&quot;&gt;&lt;div style=&quot;padding:16px;&quot;&gt; &lt;a href=&quot;https://www.instagram.com/p/CBXO7AypXkM/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;&quot; target=&quot;_blank&quot;&gt; &lt;div style=&quot; display: flex; flex-direction: row; align-items: center;&quot;&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 19% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display:block; height:50px; margin:0 auto 12px; width:50px;&quot;&gt;&lt;svg width=&quot;50px&quot; height=&quot;50px&quot; viewBox=&quot;0 0 60 60&quot; version=&quot;1.1&quot; xmlns=&quot;https://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;https://www.w3.org/1999/xlink&quot;&gt;&lt;g stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;g transform=&quot;translate(-511.000000, -20.000000)&quot; fill=&quot;#000000&quot;&gt;&lt;g&gt;&lt;path d=&quot;M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div style=&quot;padding-top: 8px;&quot;&gt; &lt;div style=&quot; color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;&quot;&gt; View this post on Instagram&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 12.5% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;&quot;&gt;&lt;div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 8px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: auto;&quot;&gt; &lt;div style=&quot; width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;p style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;&quot;&gt;&lt;a href=&quot;https://www.instagram.com/p/CBXO7AypXkM/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;&quot; target=&quot;_blank&quot;&gt;A post shared by Sujay (@sujaykundu777)&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt; &lt;script async src=&quot;//www.instagram.com/embed.js&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;h3&gt; Twitter Embed &lt;/h3&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I just published ‚ÄúDeploying a blog using Jekyll and Github Pages with SSL certificate for Free‚Äù &lt;a href=&quot;https://t.co/B3T3IQVU93&quot;&gt;https://t.co/B3T3IQVU93&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sujay Kundu (@SujayKundu777) &lt;a href=&quot;https://twitter.com/SujayKundu777/status/1012601950469160962?ref_src=twsrc%5Etfw&quot;&gt;June 29, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;


&lt;h3&gt;YouTube Responsive Embed&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/bBpKMH3nBzE?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3&gt;Vimeo Responsive Embed&lt;/h3&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/212114694?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ted-responsive-embed&quot;&gt;TED Responsive Embed&lt;/h3&gt;

&lt;iframe src=&quot;https://embed.ted.com/talks/ted_halstead_a_climate_solution_where_all_sides_can_win&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;twitch-responsive-embed&quot;&gt;Twitch Responsive Embed&lt;/h3&gt;

&lt;iframe src=&quot;https://player.twitch.tv/?autoplay=false&amp;amp;video=v248755437&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; scrolling=&quot;no&quot; height=&quot;378&quot; width=&quot;620&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;soundcloud-embed&quot;&gt;SoundCloud Embed&lt;/h3&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/29738591&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;codepen-embed&quot;&gt;CodePen Embed&lt;/h3&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;YWvpRo&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;kharrop&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Referral Form&quot; class=&quot;codepen&quot;&gt;&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;syntax-highlighting&quot;&gt;Syntax Highlighting&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'use strict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'markdown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can add inline code just like this, E.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;.code { color: #fff; }&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f4f4f4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;github-gist-embed&quot;&gt;GitHub gist Embed&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/ahmadajmi/dbb4f713317721668bcbc39420562afc.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;input-style&quot;&gt;Input Style&lt;/h3&gt;

&lt;p&gt;&lt;input type=&quot;text&quot; placeholder=&quot;I'm an input field!&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;


</description>
            <link>https://base.qap.dev/styleguide/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Testing</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.testing %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;
</description>
            <link>https://base.qap.dev/blog/categories/testing/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>Change Log</title>
            <description># Change Log

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](http://keepachangelog.com/) and this project adheres to [Semantic Versioning](http://semver.org/).

**Note that references to the Font-Awesome-Pro repository refer to a GitHub
repository that is by invitation only. You will get a 404 - Not Found if you do
not have access**

---

## [5.1.0](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.1.0)  - 2018-06-20

**Minor version upgrade notice: there are some backward-incompatible changes to this release. See the
[UPGRADING.md guide](https://github.com/FortAwesome/Font-Awesome/blob/master/UPGRADING.md) for more
information.**

### Added
* New Emoji, Design, and Travel category pack
* Another group of requested and commissioned icons
* Version 4 shim for Web Fonts with CSS
* New simplified download and NPM packages
* @fortawesome/fontawesome-free and @fortawesome/fontawesome-pro NPM packages that match what's available in the CDN and .ZIP files
* Brand icons rev, nimblr, megaport, mailchimp, hornbill, wix, weebly, themeco, squarespace, aws, shopware
* API method toHtml() for converting abstract objects to HTML
* API method counter() to generate Layers Counters
* API method watch() to configure MutationObserver and watch DOM for icon changes and additions

### Changed
* Relocating sponsor data to a separate sponsors.yml
* Updated teamspeak brand icon
* No more default exports in the CommonJS/ES packages (anything installed from NPM)
* Greatly improved performance and rendering of CSS pseudo-elements with SVG and JavaScript
* Configuration of SVG with JavaScript can now be done with attributes on the script tag
* SVG with JavaScript pseudo-elements now match syntax (font-family, font-weight) of Web Fonts with CSS

### Fixed
* Tree shaking of all NPM packages by default
* Alignment of the book-open and dice-six icon
* Correcting creative-commons
* Incorrect license on the fontawesome-common-types package
* Improve ligatures that share a base name with another ligature
* Correcting solid style of the digital-tachograph icon
* Prevent duplicating classes in some scenarios with SVG with JavaScript
* Duplicate insertion of CSS when insertCss() method was called
* Missing TypeScript definitions for the free-brands-svg-icons package

---

## [5.0.13](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.13)  - 2018-05-10

### Added
* 68 icons to Free and 165 to Pro of the most requested icons in Font Awesome

---

## [5.0.12](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.12)  - 2018-05-03

### Added
* A long time ago in a galaxy far, far away some icons were added

### Fixed
* Renamed the r brand to r-project to prevent ligature collision with the &quot;r&quot; glyph

---

## [5.0.11](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.11)  - 2018-05-01

### Added
* 16 new user icons
* Full set of Creative Commons symbols
* Regular style comment-dots used for v4 comment-alt in shim
* Top 6 brand icons: r, ebay, mastodon, researchgate, keybase, teamspeak

### Changed
* Revised slider icons FortAwesome/Font-Awesome#11872
* Make desktop typeface easier to find in apps that support ligature previews

### Fixed
* Remove errant XML entity from the lastfm-square icon FortAwesome/Font-Awesome#12847
* Correcting paths in cloud icons FortAwesome/Font-Awesome-Pro#920

---

## [5.0.10](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.10)  - 2018-04-10

### Added
* New java brand icon FortAwesome/Font-Awesome#386

### Changed
* Updating depth of dna icon
* Updating pied-piper, adding pied-piper-hat

### Fixed
* Correcting path errors on readme icon FortAwesome/Font-Awesome#12754
* Light style of lamp icon FortAwesome/Font-Awesome#12725

---

## [5.0.9](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.9)  - 2018-03-27

### Added
* New Chat icon pack and category
* New Charity icon pack and category
* New Moving icon pack and category
* New icons hands and hand-holding

### Changed
* Updated flipboard, readme, and houzz brand icon
* Making all solid icons in the medical icon pack free
* Updated hand-holding-box and hand-receiving in the Light style

### Fixed
* Missing box-sizing CSS property for fa-layers-counter

---

## [5.0.8](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.8)  - 2018-03-01

### Fixed
* OTF font files missing ligatures for Pro styles FortAwesome/Font-Awesome#12486 FortAwesome/Font-Awesome-Pro#1034

---

## [5.0.7](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.7)  - 2018-02-26

### Added
* New Logistics category
* New Medical category
* Individual SVG files available from the Font Awesome CDN
* Additional search terms

### Changed
* Apple brand icon update FortAwesome/Font-Awesome#12337
* Disable mutation observers with fontawesome.noAuto() is called
* License information now references https URL scheme

### Fixed
* Missing TypeScript names FortAwesome/react-fontawesome#83
* Adding categories metadata FortAwesome/Font-Awesome#12034
* TypeScript improvement for fontawesome.layer()
* Correcting a melting, wobbling, weird-looking whistle

---

## [5.0.6](https://github.com/FortAwesome/Font-Awesome/releases/tag/5.0.6)  - 2018-01-25

### Fixed
* @fortawesome/fontawesome-pro-light missing submodules

---

## [5.0.5](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.5)  - 2018-01-25

### Added
* New Sports category
* New Chess category
* Added brand icons for flipboard, php, quinscape, and hips

### Fixed
* Sass and Less mixin fa-icon() now uses ems instead of percentage
* Corrected misspelling of &quot;Alternate&quot; in category labels
* Improved TypeScript definitions for @fortawesome/fontawesome
* Server-side rendering was failing due to DOM-specific object access
* SVG attributes &quot;data-fa-processed&quot; renamed to &quot;data-fa-i2svg&quot;, only applies if rendered with i2svg() method

---

## [5.0.4](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.4)  - 2018-01-10

### Changed
* Updating all NPM package READMEs

### Fixed
* Improving TypeScript exports and fixing some incorrect definitions
* TypeScript error when importing entire style Fort-Awesome/Font-Awesome#12072
* Pseudo-elements erasing text contents in parent container Fort-Awesome/Font-Awesome-Pro#11995
* fa-layers-text misalignment when using Bootstrap Fort-Awesome/Font-Awesome#11871

---

## [5.0.3](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.3)  - 2018-01-08

### Added
* Adding elementor, youtube-square brand icons
* Adding window-minimize to the Free subset
* TypeScript support for all NPM packages

### Fixed
* Corrected uneven spacing in university, address-book, address-card, id-badge, id-card, mouse-pointer, phone-volume, portrait, user-alt, user-circle, user-md, user-plus, user-times, user , users
* Corrected uneven spacing in brand icons behance-square, dashcube, discourse, ember, erlang, fort-awesome, js-square, laravel, mix, patreon, palfed, phoenix-framework, node-js, skyatlas, stack-exchange, stripe, viber, weixin, yahoo , yoast

---

## [5.0.2](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.2)  - 2017-12-19

### Added
* Adding amazon-pay, cc-amazon-pay, korvue, ethereum brand icons
* Adding stopwatch to Free version

### Changed
* Ligatures now support capital case, all caps, and title case

### Fixed
* NPM packages now behave the same way as CDN and browser-specific packages FortAwesome/Font-Awesome-Pro#727 FortAwesome/Font-Awesome-Pro#896 FortAwesome/Font-Awesome-Pro#891
* Icon doesn't change when pseudo-element content changes FortAwesome/Font-Awesome-Pro#839
* Invalid XML in sprites FortAwesome/Font-Awesome-Pro#927
* Incorrect version in Sass and Less variable files

---

## [5.0.1](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.1)  - 2017-12-08

### Added
* Adding font-awesome-flag, lock-open, redo-alt, sync-alt, undo-alt to the Free version
* New NPM packages `fontawesome-free-webfonts` and `fontawesome-pro-webfonts`
* Adding old icon names to search terms for renamed icons
* Extensive metadata added to the `advanced-options` directory
* Adding stripe-s brand icon
* Adding typo3 brand icon

### Changed
* Updated dropbox brand icon to match new branding guidelines
* Updated firefox brand icon
* Updated strava brand icon
* OTF font file now include a space character

### Fixed
* OTF font file now supports different styles in Windows
* OTF font file &quot;j&quot; character now has correct space on the right
* Modifying the `class` attribute on an existing `&lt;svg&gt;` allows you to change the icon

---

## [5.0.0](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0)  - 2017-12-01

### Added
* License information

### Changed
* CSS vertical-align now &quot;em&quot;-based instead of percentage making it more consistent
* fa-ul width now closer to default browser size

---

## [5.0.0-rc5](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-rc5)  - 2017-11-28

**This release includes breaking changes**

### Added
* Brand icons: gitter, cc-stripe, stripe, hooli, aviato, strava, ember, angular, font-awesome-flag
* Icons compress-alt and expand-alt
* Adding calendar to Font Awesome 5 Free
* SASS function that makes it easier to use variables FortAwesome/Font-Awesome-Pro#824

### Changed
* BREAKING Renamed icon composition to mask (&quot;data-fa-compose&quot; becomes &quot;data-fa-mask&quot;)
* BREAKING Re-organized directory structure to match upcoming documentation
* BREAKING Font Awesome styles inserted into the `&lt;head&gt;` will now precede other link and style definitions
* BREAKING `fontawesome.text` and `fontawesome.icon` now use `styles` param instead of `style`
* Updated sizing for twitter, discord, youtube
* Class fa-li now respects line-height and has new recommended markup (see included docs)

### Fixed
* Duplicate `style` tags being added in the head FortAwesome/Font-Awesome-Pro#858
* Error with icon composition/masking that caused a confusing error message
* An error when using pseudo elements and the element is empty (Array.reduce error)
* Icons not being replaced with SVG if the text content is not empty

---

## [5.0.0-rc4](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-rc4)  - 2017-10-27

### Added
* Ligature support in the OTF font
* Vue.js brand icon
* Sass and Less brand icons
* Autoprefixer brand icon
* Individual icon imports in icon packages FortAwesome/Font-Awesome-Pro#808

### Changed
* Better poo eyes
* Renamed HTML status classes to `fontawesome-i2svg-active`, `fontawesome-i2svg-pending`, `fontawesome-i2svg-complete`
* HTML status class for active is added only after the first batch of icon replacements occur
* Added mention of newer versions of iOS in documentation FortAwesome/Font-Awesome-Pro#810

### Fixed
* Performance and missing features with mutation observer (should fix FortAwesome/Font-Awesome-Pro#813)
* Incorrect handling of icon class and style attributes when using autoReplace = 'nest' FortAwesome/Font-Awesome-Pro#809
* Pseudo elements not added or removed when class mutations occur FortAwesome/Font-Awesome-Pro#821

---

## [5.0.0-rc3](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-rc3)  - 2017-10-13

### Added
* Node.js brand icon FortAwesome/Font-Awesome-Pro#779
* React brand icon FortAwesome/Font-Awesome-Pro#780
* OSI brand icon FortAwesome/Font-Awesome-Pro#748
* Add a class to the html element when icon replacement is complete FortAwesome/Font-Awesome-Pro#778
* Add support for symbols in API including ability to name the symbol
* Use CSS pseudo elements (:before and :after) to make trigger SVG replacements

### Changed
* Switched the locations of fork and knife in utensils-alt FortAwesome/Font-Awesome-Pro#466
* Updated the AWS brand icon FortAwesome/Font-Awesome-Pro#735
* Updated Apple App Store icon FortAwesome/Font-Awesome-Pro#728

### Fixed
* Do not throw an error if icon is missing when calling icon() method in API
* Ensure that unicode values do not change between releases
* Version field is missing in fontawesome-pro-brands/package.json FortAwesome/Font-Awesome-Pro#781
* Repeated commenting out of fa-layers when i2svg is called FortAwesome/Font-Awesome-Pro#788
* Title not showing up correctly for SVG FortAwesome/Font-Awesome-Pro#786

---

## [5.0.0-rc2](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-rc2)  - 2017-09-22

### Added
* Brand icons: accusoft, ns8, uniregistry

### Fixed
* Link to the npm package in the docs FortAwesome/Font-Awesome-Pro#729
* Incorrect reference to fontawesome-pro.js in docs

---

## [5.0.0-rc1](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-rc1)  - 2017-09-15

### Changed
* New Bitbucket logo FortAwesome/Font-Awesome-Pro#720
* Modifed the star icons to match use case better FortAwesome/Font-Awesome-Pro#710
* Switched names of css3 and css3-alt to reflect correct branding

### Fixed
* Correct whitespace with the Visa logo FortAwesome/Font-Awesome-Pro#719
* Improve OTF support by passing through FontForge FortAwesome/Font-Awesome-Pro#565
* Fonts with &quot;undefined&quot; name FortAwesome/Font-Awesome-Pro#711
* Shims will only function if using old prefix of &quot;fa&quot; FortAwesome/Font-Awesome-Pro#692
* Added missing &quot;youtube&quot; icon to categories

---

## [5.0.0-beta7](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-beta7)  - 2017-09-11

### Added
* Ability to nest the `&lt;svg&gt;` tag within the `&lt;i&gt;` FortAwesome/Font-Awesome-Pro#624
* Define icons as symbols and leverage SVG sprites FortAwesome/Font-Awesome-Pro#629
* Added alternative CSS3 logo FortAwesome/Font-Awesome-Pro#682

### Changed
* Power Transforms now execute inside the SVG instead of on the root element
* Filenames have changed to reflect a better division between Font Awesome Free and Pro

### Fixed
* More improvements to the version 4 shim FortAwesome/Font-Awesome-Pro#673 FortAwesome/Font-Awesome-Pro#678 FortAwesome/Font-Awesome-Pro#686 FortAwesome/Font-Awesome-Pro#687 FortAwesome/Font-Awesome-Pro#692
* Animation support for inline SVG now works as expected FortAwesome/Font-Awesome-Pro#662

---

## [5.0.0-beta6](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-beta6)  - 2017-09-01

### Added
* Ability to flip horizontal and vertical with CSS classes fa-flip-horizontal and fa-flip-vertical
* New film-alt icon that allows for layering other icons
* Microsoft brand

### Changed
* New YouTube branding FortAwesome/Font-Awesome-Pro#646

### Fixed
* Fixed a bunch of shim-related issues
* Cogs off center FortAwesome/Font-Awesome-Pro#663
* Corrected icons/categories.yml with canonical names

---

## [5.0.0-beta5](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-beta5)  - 2017-08-25

### Added
* Full parity with Font Awesome 4! 616 total core icons in each style
* 297 total brand and logo icons
* Separate CSS file to accompany the SVG Framework FortAwesome/Font-Awesome-Pro#627
* Alternative to the dots icon FortAwesome/Font-Awesome-Pro#608
* Made window icons consistent FortAwesome/Font-Awesome-Pro#611

### Fixed
* Production builds not correctly being detected FortAwesome/Font-Awesome-Pro#631

---

## [5.0.0-beta4](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-beta4)  - 2017-08-18

### Added
* 590 total core icons in each style
* 291 total brand and logo icons

### Fixed
* Reduced the size of JS file from 66 to 22 kb
* Regression caused by with web font alignment FortAwesome/Font-Awesome-Pro#460

---

## [5.0.0-beta3](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-beta3)  - 2017-08-15

### Added
* 583 total core icons in each style

### Fixed
* Documentation improvements and fixes FortAwesome/Font-Awesome-Pro#586
* Vertical alignment of TTF and OTF fonts FortAwesome/Font-Awesome-Pro#460
* The &quot;fa_500px&quot; icon should be named &quot;fa500px&quot; FortAwesome/Font-Awesome-Pro#578

---

## [5.0.0-beta2](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-beta2)  - 2017-08-11

### Added
* 570 total core icons in each style
* 291 total brand and logo icons
* NPM (ES6, CommonJS, AMD) packages for use with other JavaScript libraries and tools FortAwesome/Font-Awesome-Pro#574
* Added a guide to choosing which implementation is best for you FortAwesome/Font-Awesome-Pro#532

### Changed
* Showing a missing icon is now configurable FortAwesome/Font-Awesome-Pro#569

### Fixed
* Composition framework now works in browsers that do not support transform-origin FortAwesome/Font-Awesome-Pro#564

---

## [5.0.0-beta1](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-beta1)  - 2017-08-04

### Added
* 524 total core icons in each style
* 289 total brand and logo icons
* New composition framework FortAwesome/Font-Awesome-Pro#537
* Animated indicator if you use an icon that does not exist

### Changed
* Basic linting for Sass and Less files
* Add JavaScript guard block to prevent leaking errors
* Add support for automatic accessibility to SVG Framework Layers

### Fixed
* Regression where stacks and pulled and bordered were not working in SVG Framework
* SVG sprite example had confusing inline styles FortAwesome/Font-Awesome-Pro#549
* Make getting started page more consistent between examples FortAwesome/Font-Awesome-Pro#544
* Added missing sizes fa-[6-10], xs, sm FortAwesome/Font-Awesome-Pro#546
* Title tag missing in SVG sprites FortAwesome/Font-Awesome-Pro#536

---

## [5.0.0-alpha7](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-alpha7)  - 2017-07-28

### Added
* 451 total core icons in each style
* 281 total brand and logo icons
* Less support is back!
* OpenType (.otf) file formats for web fonts

### Changed
* Changes the fa-spin animation to go from 0deg to 360deg to eliminate hitch FortAwesome/Font-Awesome-Pro#522
* Improved mutation handling FortAwesome/Font-Awesome-Pro#517

### Fixed
* fa-fw now works correctly with the SVG framework FortAwesome/Font-Awesome-Pro#530
* Removed execute bit on some icon files FortAwesome/Font-Awesome-Pro#520

---

## [5.0.0-alpha6](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-alpha6)  - 2017-07-21

### Added
* 410 total core icons in each style
* 270 total brand and logo icons
* All new Font Awesome 4 shim file
* Beginnings of a public JS API FortAwesome/Font-Awesome-Pro#512

### Changed
* Added Firefox ESR and Chrome for Businesses to browser compatibility FortAwesome/Font-Awesome-Pro#506

### Fixed
* Ensure that SVG title attributes are unique
* Fixed incorrect viewBox sizes FortAwesome/Font-Awesome-Pro#492
* Fix chart-area alignment in the solid style FortAwesome/Font-Awesome-Pro#508
* Add missing xmlns attributes in some SVGs FortAwesome/Font-Awesome-Pro#509

---

## [5.0.0-alpha5](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-alpha5)  - 2017-07-14

### Added
* 228 total brand and logo icons
* New transform framework for sizing, moving, rotating, and flipping icons
* New icon counters
* New layers framework
* New text overlays
* Auto-comments with the original source icons alongside SVG replacements

### Changed
* Autoprefixer to correctly add browser prefixes for supported browsers
* Removed browser-specific CSS properties in Sass source files (now relies on autoprefixer)

### Fixed
* The rotation on checkmark icons
* Other icon feedback from previous weeks
* Correct fixed width settings to 1.25em (based on the new 16px grid)
* Icons displaying as block instead of inline-block in IE and older Safari

---

## [5.0.0-alpha4](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-alpha4)  - 2017-07-07

### Added
* 93 brand icons

---

## [5.0.0-alpha3](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-alpha3)  - 2017-06-30

### Added
* 95 additional icons; including file types, directional, and some existing and new brand icons

### Fixed
* Wrong content type in generated CSS FortAwesome/Font-Awesome-Pro#458
* Removal of query string from static resources FortAwesome/Font-Awesome-Pro#458
* SVG font ID's are incorrect in webfont implementation FortAwesome/Font-Awesome-Pro#474

---

## [5.0.0-alpha2](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-alpha2)  - 2017-06-27

### Added
* How/When to upgrade from FA4 to FA5 FortAwesome/Font-Awesome-Pro#454

### Fixed
* Links to SVG files broken in the example files FortAwesome/Font-Awesome-Pro#456
* Misnamed icon names in examples FortAwesome/Font-Awesome-Pro#445
* Mangled HTML in the Getting Started example FortAwesome/Font-Awesome-Pro#442
* Bad grammar and typos FortAwesome/Font-Awesome-Pro#443
* fas-arrow-to-top is identical to fas-arrow-to-right FortAwesome/Font-Awesome-Pro#423
* Vertical alignment issues with webfont implementation FortAwesome/Font-Awesome-Pro#444
* Add browser compatibility tables to demo FortAwesome/Font-Awesome-Pro#435
* Remove MAC OS feces from builds FortAwesome/Font-Awesome-Pro#437
* TTF naming issues that prevent correct usage/installation FortAwesome/Font-Awesome-Pro#450
* Correct CSS for SVG framework stacking, was reversed from normal FortAwesome/Font-Awesome-Pro#452

---

## [5.0.0-alpha1](https://github.com/FortAwesome/Font-Awesome-Pro/releases/tag/5.0.0-alpha1)  - 2017-06-23

### Added
* 300+ more icons
* Brands pack
* New JavaScript based SVG Framework
* New SVG Sprites based framework
* Source SVGs
* Documentation with a convenient build-in web server

### Changed
* New directory structure
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/CHANGELOG/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Upgrading Guide</title>
            <description># Upgrading Guide

See the [CHANGELOG.md](/assets/bower_components/font-awesome/CHANGELOG/) for detailed information about what has changed between versions.

This guide is useful to figure out what you need to do between breaking changes.

As always, [submit issues](https://github.com/FortAwesome/Font-Awesome/issues/new) that you run into with this guide or with these upgrades to us.

## 5.0.x to 5.1.0

### New packages available for browser-only integration

**If you were previously using @fortawesome/fontawesome you need to switch to one of the new packages.**

Our Free and Pro CDN provide access to JS, CSS, sprites, and separate SVG files.

We've now made these files conveniently available through NPM.

* [@fortawesome/fontawesome-free](https://www.npmjs.com/package/@fortawesome/fontawesome-free)
* @fortawesome/fontawesome-pro (private package, requires Pro subscription)

If you are familiar with the paths and options available with the CDN these
packages should be familiar.

Information about [Font Awesome Pro subscriptions](https://fontawesome.com/pro)
can be found in your [Font Awesome awesome
account](https://fontawesome.com/account/services).

### Renamed packages

The following packages have been renamed as part of 5.1.0 of Font Awesome.

_All packages are in the [@fortawesome NPM scope](https://www.npmjs.com/search?q=scope:fortawesome&amp;page=1&amp;ranking=optimal)_

| Old package(1)            | New package            |
|---------------------------|------------------------|
| fontawesome-free-webfonts | fontawesome-free       |
| fontawesome-pro-webfonts  | fontawesome-pro        |
| fontawesome-free-solid ¬†  | free-solid-svg-icons   |
| fontawesome-free-regular  | free-regular-svg-icons |
| fontawesome-free-brands ¬† | free-brands-svg-icons  |
| fontawesome-pro-solid ¬†   | pro-solid-svg-icons    |
| fontawesome-pro-regular ¬† | pro-regular-svg-icons  |
| fontawesome-pro-light ¬†   | pro-light-svg-icons    |

(1) Old packages have now been deprecated. They are still available but will only receive high priority patch release fixes.

**You'll need to update your package.json file with the renamed packages and new versions.**

### No more default imports

Recently we spent a good deal of time supporting TypeScript to enable us to
create the Angular Font Awesome component. During that adventure we
[were](https://basarat.gitbooks.io/typescript/docs/tips/defaultIsBad.html)
[convinced](https://blog.neufund.org/why-we-have-banned-default-exports-and-you-should-do-the-same-d51fdc2cf2ad)
that we were going to remove default exports from all of our components,
libraries, and packages. This is complete with the umbrella release of `5.1.0` of Font Awesome.

What does that mean?

~~Old way:~~

```javascript
import fontawesome from '@fortawesome/fontawesome'
import solid from '@fortawesome/fontawesome-free-solid'
import faTwitter from '@fortawesome/fontawesome-free-brands/faTwitter'
import FontAwesomeIcon from '@fortawesome/vue-fontawesome'

library.add(solid, faTwitter)
```

New way:

```javascript
import { library, dom } from '@fortawesome/fontawesome-svg-core'
import { fas } from '@fortawesome/free-solid-svg-icons'
import { faTwitter } from '@fortawesome/free-brands-svg-icons'
import { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'

library.add(fas, faTwitter)

// Kicks off the process of finding &lt;i&gt; tags and replacing with &lt;svg&gt;
dom.watch()
```

This is also a valid way to import icons that works if your tool does not support tree shaking:

```javascript
import { faTwitter } from '@fortawesome/free-brands-svg-icons/faTwitter'
```

### Improved support for tree shaking

Tree shaking is now functional by default and no additional configuration is required to make it work.

The `shakable.es.js` module has been removed and is no longer needed.

If you've previously configured tree shaking by modifying your webpack or rollup you can safely remove these.

**We recommend that you check your bundle size after upgrading an ensure that file sizes are as you would expect.**

```javascript
module.exports = {
  // ...
  resolve: {
    alias: {
      '@fortawesome/fontawesome-free-solid$': '@fortawesome/fontawesome-free-solid/shakable.es.js'
    }
  }
}
```

```javascript
const alias = require('rollup-plugin-alias')

rollup({
  // ...
  plugins: [
    alias({
      '@fortawesome/fontawesome-free-solid': 'node_modules/@fortawesome/fontawesome-free-solid/shakable.es.js'
    })
  ]
})
```

## 5.0.11 to 5.0.12

Due to a collision with the &quot;r&quot; glyph the R Project brand icon has been renamed to `r-project`.

## 5.0.x to 5.0.6

### SVG Attribute was changed from data-fa-processed to data-fa-i2svg

As part of a bug fix for the release of 5.0.6 we renamed an attribute that was found on `&lt;svg&gt;` elements from
`data-fa-processed` to `data-fa-i2svg`. We feel this more accurately reflects the intent and purpose.

This attribute is added to any icon that has been generated using `fontawesome.dom.i2svg()`.

Be aware that `data-fa-i2svg` (or `data-fa-processed`) will no longer be present on icons that are created using
`fontawesome.icon()`.

If you've written and DOM queries that rely on `data-fa-processed` you should get things working again by doing a
simple find and replace.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/UPGRADING/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Mouse Wheel ChangeLog</title>
            <description># Mouse Wheel ChangeLog

## 3.1.13

* Update copyright notice and license to remove years
* Create the correct compressed version
* Remove the obsolete jQuery Plugin Registry file

## 3.1.12

* Fix possible 0 value for line height when in delta mode 1

## 3.1.11

* Fix version number for package managers...

## 3.1.10

* Fix issue with calculating line height when using older versions of jQuery
* Add offsetX/Y normalization with setting to turn it off
* Cleans up data on teardown

## 3.1.9

* Fix bower.json file
* Updated how the deltas are adjusted for older mousewheel based events that have deltas that are factors of 120.
* Add $.event.special.mousewheel.settings.adjustOldDeltas (defaults to true) to turn off adjusting of old deltas that are factors of 120. You'd turn this off if you want to be as close to native scrolling as possible.

## 3.1.8

* Even better handling of older browsers that use a wheelDelta based on 120
* And fix version reported by `$.event.special.mousewheel`

## 3.1.7

* Better handle the `deltaMode` values 1 (lines) and 2 (pages)
* Attempt to better handle older browsers that use a wheelDelta based on 120

## 3.1.6

* Deprecating `delta`, `deltaX`, and `deltaY` event handler arguments
* Update actual event object with normalized `deltaX `and `deltaY` values (`event.deltaX`, `event.deltaY`)
* Add `deltaFactor` to the event object (`event.deltaFactor`)
* Handle `&gt; 0` but `&lt; 1` deltas better
* Do not fire the event if `deltaX` and `deltaY` are `0`
* Better handle different devices that give different `lowestDelta` values
* Add `$.event.special.mousewheel.version`
* Some clean up

## 3.1.5

* Bad release because I did not update the new `$.event.special.mousewheel.version`

## 3.1.4

* Always set the `deltaY`
* Add back in the `deltaX` and `deltaY` support for older Firefox versions

## 3.1.3

* Include `MozMousePixelScroll` in the to fix list to avoid inconsistent behavior in older Firefox

## 3.1.2

* Include grunt utilities for development purposes (jshint and uglify)
* Include support for browserify
* Some basic cleaning up

## 3.1.1

* Fix rounding issue with deltas less than zero


## 3.1.0

* Fix Firefox 17+ issues by using new wheel event
* Normalize delta values
* Adds horizontal support for IE 9+ by using new wheel event
* Support AMD loaders


## 3.0.6

* Fix issue with delta being 0 in Firefox


## 3.0.5

* jQuery 1.7 compatibility


## 3.0.4

* Fix IE issue


## 3.0.3

* Added `deltaX` and `deltaY` for horizontal scrolling support (Thanks to Seamus Leahy)


## 3.0.2

* Fixed delta being opposite value in latest Opera
* No longer fix `pageX`, `pageY` for older Mozilla browsers
* Removed browser detection
* Cleaned up the code


## 3.0.1

* Bad release... creating a new release due to plugins.jquery.com issue :(


## 3.0

* Uses new special events API in jQuery 1.2.2+
* You can now treat `mousewheel` as a normal event and use `.bind`, `.unbind` and `.trigger`
* Using jQuery.data API for expandos


## 2.2

* Fixed `pageX`, `pageY`, `clientX` and `clientY` event properties for Mozilla based browsers


## 2.1.1

* Updated to work with jQuery 1.1.3
* Used one instead of bind to do unload event for clean up


## 2.1

* Fixed an issue with the unload handler


## 2.0

* Major reduction in code size and complexity (internals have change a whole lot)


## 1.0

* Fixed Opera issue
* Fixed an issue with children elements that also have a mousewheel handler
* Added ability to handle multiple handlers
</description>
            <link>https://base.qap.dev/assets/bower_components/jquery-mousewheel/ChangeLog/</link>
          </item>
        
      
    
      
        
          <item>
            <title>matchesSelector helper</title>
            <description># matchesSelector helper

[`matches`/`matchesSelector`](https://developer.mozilla.org/en-US/docs/Web/API/Element/matches) is pretty hot :fire:, but has [vendor-prefix baggage](http://caniuse.com/#feat=matchesselector) :handbag: :pouch:. This helper function takes care of that, without polyfilling or augmenting `Element.prototype`.

``` js
matchesSelector( elem, selector );
// for example
matchesSelector( myElem, 'div.my-hawt-selector' );
```

## Install

Download [matches-selector.js](https://github.com/desandro/matches-selector/raw/master/matches-selector.js)

Install with [Bower](http://bower.io): `bower install matches-selector`

[Install with npm](https://www.npmjs.org/package/desandro-matches-selector): `npm install desandro-matches-selector`

## Browser support

IE10+, all modern browsers

Use [matchesSelector v1](https://github.com/desandro/matches-selector/releases/tag/v1.0.3) for IE8 and IE9 support.

## MIT license

matchesSelector is released under the [MIT license](http://desandro.mit-license.org)
</description>
            <link>https://base.qap.dev/assets/bower_components/desandro-matches-selector/</link>
          </item>
        
      
    
      
        
          <item>
            <title>EvEmitter</title>
            <description># EvEmitter

_Lil' event emitter_ ‚Äî add a little pub/sub

EvEmitter adds publish/subscribe pattern to a browser class. It's a smaller version of [Olical/EventEmitter](https://github.com/Olical/EventEmitter). That EventEmitter is full featured, widely used, and great. This EvEmitter has just the base event functionality to power the event API in libraries like [Isotope](http://isotope.metafizzy.co), [Flickity](http://flickity.metafizzy.co), [Masonry](http://masonry.desandro.com), and [imagesLoaded](http://imagesloaded.desandro.com).

## API

``` js
// Inherit prototype, IE8+
MyClass.prototype = new EvEmitter();

// Inherit prototype, IE9+
MyClass.prototype = Object.create( EvEmitter.prototype );

// Mixin prototype
_.extend( MyClass.prototype, EvEmitter.prototype );

// single instance
var emitter = new EvEmitter();
```

### on

Add an event listener.

``` js
emitter.on( eventName, listener )
```

+ `eventName` - _String_ - name of the event
+ `listener` - _Function_

### off

Remove an event listener.

``` js
emitter.off( eventName, listener )
```

### once

Add an event listener to be triggered only once.

``` js
emitter.once( eventName, listener )
```

### emitEvent

Trigger an event.

``` js
emitter.emitEvent( eventName, args )
```

+ `eventName` - _String_ - name of the event
+ `args` - _Array_ - arguments passed to listeners

### allOff

Removes all event listeners.

``` js
emitter.allOff()
```

## Code example

``` js
// create event emitter
var emitter = new EventEmitter();

// listeners
function hey( a, b, c ) {
  console.log( 'Hey', a, b, c )
}

function ho( a, b, c ) {
  console.log( 'Ho', a, b, c )
}

function letsGo( a, b, c ) {
  console.log( 'Lets go', a, b, c )
}

// bind listeners
emitter.on( 'rock', hey )
emitter.once( 'rock', ho )
// trigger letsGo once
emitter.on( 'rock', letsGo )

// emit event
emitter.emitEvent( 'rock', [ 1, 2, 3 ] )
// =&gt; 'Hey', 1, 2, 3
// =&gt; 'Ho', 1, 2, 3
// =&gt; 'Lets go', 1, 2, 3

// unbind
emitter.off( 'rock', ho )

emitter.emitEvent( 'rock', [ 4, 5, 6 ] )
// =&gt; 'Hey' 4, 5, 6
```

## License

EvEmitter is released under the [MIT License](http://desandro.mit-license.org/). Have at it.
</description>
            <link>https://base.qap.dev/assets/bower_components/ev-emitter/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Fizzy UI utils</title>
            <description># Fizzy UI utils

UI utility &amp; helper functions

Used in [Flickity](http://flickity.metafizzy.co), [Isotope](http://isotope.metafizzy.co), [Masonry](http://masonry.desandro.com), [Draggabilly](http://draggabilly.desandro.com)

## Install

Bower: `bower install fizzy-ui-utils --save`

npm: `npm install fizzy-ui-utils --save`

## API

``` js
// fizzyUIUtils is the browser global
var utils = fizzyUIUtils;

// ---- ---- //

utils.extend( a, b )
// extend object

utils.modulo( num, div )
// num [modulo] div

utils.makeArray( obj )
// make array from object

utils.removeFrom( ary, obj )
// remove object from array

utils.getParent( elem, selector )
// get parent element of an element, given a selector string

utils.getQueryElement( elem )
// if elem is a string, use it as a selector and return element

Class.prototype.handleEvent = utils.handleEvent;
// enable Class.onclick when element.addEventListener( 'click', this, false )

utils.filterFindElements( elems, selector )
// iterate through elems, filter and find all elements that match selector

utils.debounceMethod( Class, methodName, threhold )
// debounce a class method

utils.docReady( callback )
// trigger callback on document ready

utils.toDashed( str )
// 'camelCaseString' -&gt; 'camel-case-string'

utils.htmlInit( Class, namespace )
// on document ready, initialize Class on every element
// that matches js-namespace
// pass in JSON options from element's data-options-namespace attribute
```

---

[MIT license](http://desandro.mit-license.org/). Have at it.

By [Metafizzy](http://metafizzy.co)
</description>
            <link>https://base.qap.dev/assets/bower_components/fizzy-ui-utils/</link>
          </item>
        
      
    
      
        
          <item>
            <title></title>
            <description>&lt;h1&gt;&lt;img src=&quot;https://img.fortawesome.com/349cfdf6/logo-fa-free.svg&quot; alt=&quot;Font Awesome 5 Free&quot; width=&quot;50%&quot;&gt;&lt;/h1&gt;

&gt; Version 5 ‚Äì the iconic SVG, font, and CSS framework

The internet's most popular icon toolkit has been redesigned and built from
scratch. On top of this, features like icon font ligatures, an SVG framework,
official NPM packages for popular frontend libraries like React, and access to
a new CDN.

Not familiar with Font Awesome 5? [Learn
more](https://www.kickstarter.com/projects/232193852/font-awesome-5) about our
successful Kickstarter and plan. You can also **[order Font Awesome
Pro](https://fontawesome.com/pro)** which includes tons more icons directly
from [fontawesome.com](https://fontawesome.com).

## Get started with 5!

Learn how to [get started](https://fontawesome.com/get-started) with Font Awesome or dive deeper into [other topics](https://fontawesome.com/how-to-use).

* [SVG with JS](https://fontawesome.com/how-to-use/svg-with-js)
* [Web Fonts with CSS](https://fontawesome.com/how-to-use/web-fonts-with-css)
* [Use on the Desktop](https://fontawesome.com/how-to-use/use-on-desktop)
* [Use with Node.js](https://fontawesome.com/how-to-use/use-with-node-js)
* [JS Component Packages](https://fontawesome.com/how-to-use/js-component-packages)
* [SVG Sprites](https://fontawesome.com/how-to-use/svg-sprites)
* [Upgrading from Version 4](https://fontawesome.com/how-to-use/upgrading-from-4)
* [Server Side Rendering](https://fontawesome.com/how-to-use/server-side-rendering)
* [Font Awesome API](https://fontawesome.com/how-to-use/font-awesome-api)
* [Performance and Security](https://fontawesome.com/how-to-use/performance-and-security)
* [Accessibility](https://fontawesome.com/how-to-use/accessibility)

### Where did Font Awesome 4 (or 3) go?

Now that Font Awesome 5 has been released we are marking version 4 as
end-of-life. We don't plan on releasing any further versions of the 4.x or 3.x.

Documentation is still available but it's moved to
[https://fontawesome.com/v4.7.0](https://fontawesome.com/v4.7.0) and
[https://fontawesome.com/v3.2.1](https://fontawesome.com/v3.2.1).

The Git repository for
[v4.7.0](https://github.com/FortAwesome/Font-Awesome/releases/tag/v4.7.0) and
[v3.2.1](https://github.com/FortAwesome/Font-Awesome/releases/tag/v3.2.1) can
be found in our GitHub releases.

## Change log

We'll keep track of each release in the [CHANGELOG.md](/assets/bower_components/font-awesome/CHANGELOG/)

Looking for older versions of Font Awesome? Check the [releases](https://github.com/FortAwesome/Font-Awesome/releases).

## Upgrading

From time-to-time we'll have special upgrading instructions from one version to the next.

Check out the [UPGRADING.md](/assets/bower_components/font-awesome/UPGRADING/) guide when you upgrade your dependencies.

## Code of conduct

We will behave ourselves if you behave yourselves. For more details see our
[CODE_OF_CONDUCT.md](/assets/bower_components/font-awesome/CODE_OF_CONDUCT.md).

## Contributing

Please read through our [contributing guidelines](/assets/bower_components/font-awesome/CONTRIBUTING.md).  Included
are directions for opening issues.

## Versioning

Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered
with the following format:

`&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;`

For more information on SemVer, please visit http://semver.org.

**The major version &quot;5&quot; is part of an umbrella release.  It includes many different types of files and technologies. Therefore
we deviate from normal SemVer in the following ways:**

* Any release may update the design, look-and-feel, or branding of an existing
  icon
* We will never intentionally release a `patch` version update that breaks
  backward compatibility
* A `minor` release **may include backward-incompatible changes** but we will
  write clear upgrading instructions in UPGRADING.md
* A `minor` or `patch` release will never remove icons
* Bug fixes will be addressed as `patch` releases unless they include backward
  incompability then they will be `minor` releases

## License

Font Awesome Free is free, open source, and GPL friendly. You can use it for
commercial projects, open source projects, or really almost whatever you want.

- Icons ‚Äî CC BY 4.0 License
  - In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.
- Fonts ‚Äî SIL OFL 1.1 License
  - In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.
- Code ‚Äî MIT License
  - In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.

Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font
Awesome Free files already contain embedded comments with sufficient
attribution, so you shouldn't need to do anything additional when using these
files normally.

We've kept attribution comments terse, so we ask that you do not actively work
to remove them from files, especially code. They're a great way for folks to
learn about Font Awesome.

## Team

* [Dave Gandy](https://github.com/davegandy)
* [Travis Chase](https://github.com/supercodepoet)
* [Rob Madole](https://github.com/robmadole)
* [Brian Talbot](https://github.com/talbs)
* [Jory Raphael](https://github.com/sensibleworld)
* [Mike Wilkerson](https://github.com/mlwilkerson)
* [Geremia Taglialatela](https://github.com/tagliala)
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome-common-types - SVG with JavaScript</title>
            <description># @fortawesome/fontawesome-common-types - SVG with JavaScript

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome-common-types.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome-common-types)

## What is this package?

Font Awesome 5 JavaScript packages support TypeScript. This package abstracts out some of the common definitions that those packages use.

## Here be dragons

If you are trying to import types from this package we *highly* recommend you do the following instead as *all types in this package are re-exported to the main fontawesome package*.

your.ts

```
import {
  IconName
} from `@fortawesome/fontawesome`

const myIcon: IconName = &quot;...&quot;
```

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome-common-types/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome-free-brands - SVG with JavaScript version</title>
            <description># @fortawesome/fontawesome-free-brands - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome-free-brands.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome-free-brands)

## Installation

```
$ npm i --save @fortawesome/fontawesome-free-brands
```

Or

```
$ yarn add @fortawesome/fontawesome-free-brands
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome-free-brands/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome-free-regular - SVG with JavaScript version</title>
            <description># @fortawesome/fontawesome-free-regular - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome-free-regular.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome-free-regular)

## Installation

```
$ npm i --save @fortawesome/fontawesome-free-regular
```

Or

```
$ yarn add @fortawesome/fontawesome-free-regular
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome-free-regular/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome-free-solid - SVG with JavaScript version</title>
            <description># @fortawesome/fontawesome-free-solid - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome-free-solid.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome-free-solid)

## Installation

```
$ npm i --save @fortawesome/fontawesome-free-solid
```

Or

```
$ yarn add @fortawesome/fontawesome-free-solid
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome-free-solid/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome-free-webfonts - Web Fonts with CSS version</title>
            <description># @fortawesome/fontawesome-free-webfonts - Web Fonts with CSS version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome-free-webfonts.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome-free-webfonts)

## Installation

```
$ npm i --save @fortawesome/fontawesome-free-webfonts
```

Or

```
$ yarn add @fortawesome/fontawesome-free-webfonts
```

## What is this package?

This package includes CSS, Less, SCSS, and the individual web font files needed to get Font Awesome 5 Web Fonts with CSS working in your freeject.

Inside `node_modules/@fortawesome/fontawesome-free-webfonts` you'll find the following directories:

* `css`
* `less`
* `scss`
* `webfonts`

It's up to you to configure your build tool to use these.

## Documentation

Get started [here](https://fontawesome.com/get-started/web-fonts-with-css). Continue your journey [here](https://fontawesome.com/how-to-use/web-fonts-with-css).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome-free-webfonts/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome-free - The Official Font Awesome 5 NPM package</title>
            <description># @fortawesome/fontawesome-free - The Official Font Awesome 5 NPM package

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome-free.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome-free)

## Installation

```
$ npm i --save @fortawesome/fontawesome-free
```

Or

```
$ yarn add @fortawesome/fontawesome-free
```

## What's included?

**This package includes all the same files available through our Free and Pro CDN.**

* /js - All JavaScript files associated with Font Awesome 5 SVG with JS
* /css - All CSS using the classic Web Fonts with CSS implementation
* /sprites - SVG icons packaged in a convenient sprite
* /scss, /less - CSS Pre-processor files for Web Fonts with CSS
* /webfonts - Accompanying files for Web Fonts with CSS
* /svg - Individual icon files in SVG format

## Documentation

Get started [here](https://fontawesome.com/get-started). Continue your journey [here](https://fontawesome.com/how-to-use).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome-free/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome-svg-core - SVG with JavaScript version</title>
            <description># @fortawesome/fontawesome-svg-core - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome-svg-core.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome-svg-core)

## Installation

```
$ npm i --save @fortawesome/fontawesome-svg-core
```

Or

```
$ yarn add @fortawesome/fontawesome-svg-core
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome-svg-core/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/fontawesome - SVG with JavaScript version</title>
            <description># @fortawesome/fontawesome - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/fontawesome.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/fontawesome)

## Installation

```
$ npm i --save @fortawesome/fontawesome
```

Or

```
$ yarn add @fortawesome/fontawesome
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/fontawesome/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/free-brands-svg-icons - SVG with JavaScript version</title>
            <description># @fortawesome/free-brands-svg-icons - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/free-brands-svg-icons.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/free-brands-svg-icons)

## Installation

```
$ npm i --save @fortawesome/free-brands-svg-icons
```

Or

```
$ yarn add @fortawesome/free-brands-svg-icons
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/free-brands-svg-icons/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/free-regular-svg-icons - SVG with JavaScript version</title>
            <description># @fortawesome/free-regular-svg-icons - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/free-regular-svg-icons.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/free-regular-svg-icons)

## Installation

```
$ npm i --save @fortawesome/free-regular-svg-icons
```

Or

```
$ yarn add @fortawesome/free-regular-svg-icons
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/free-regular-svg-icons/</link>
          </item>
        
      
    
      
        
          <item>
            <title>@fortawesome/free-solid-svg-icons - SVG with JavaScript version</title>
            <description># @fortawesome/free-solid-svg-icons - SVG with JavaScript version

&gt; &quot;I came here to chew bubblegum and install Font Awesome 5 - and I'm all out of bubblegum&quot;

[![npm](https://img.shields.io/npm/v/@fortawesome/free-solid-svg-icons.svg?style=flat-square)](https://www.npmjs.com/package/@fortawesome/free-solid-svg-icons)

## Installation

```
$ npm i --save @fortawesome/free-solid-svg-icons
```

Or

```
$ yarn add @fortawesome/free-solid-svg-icons
```

## Documentation

Get started [here](https://fontawesome.com/get-started/svg-with-js). Continue your journey [here](https://fontawesome.com/how-to-use/svg-with-js).

Or go straight to the [API documentation](https://fontawesome.com/how-to-use/font-awesome-api).

## Issues and support

Start with [GitHub issues](https://github.com/FortAwesome/Font-Awesome/issues) and ping us on [Twitter](https://twitter.com/fontawesome) if you need to.
</description>
            <link>https://base.qap.dev/assets/bower_components/font-awesome/advanced-options/use-with-node-js/free-solid-svg-icons/</link>
          </item>
        
      
    
      
        
          <item>
            <title>getSize</title>
            <description># getSize

Get the size of elements. Used in [Masonry](https://masonry.desandro.com), [Isotope](https://isotope.metafizzy.co), &amp;  [Flickity](https://flickity.metafizzy.co). 

``` js
var size = getSize( elem );
// elem can be an element
var size = getSize( document.querySelector('.selector') )
// elem can be a selector string
var size = getSize('.selector')
```

Returns an object with: 

+ width, height
+ innerWidth, innerHeight
+ outerWidth, outerHeight
+ paddingLeft, paddingTop, paddingRight, paddingBottom
+ marginLeft, marginTop, marginRight, marginBottom
+ borderLeftWidth, borderTopWidth, borderRightWidth, borderBottomWidth
+ isBorderBox

Browser support: IE10+, Android 4.0+, iOS 5+, and modern browsers

## Install

Install with npm: `npm install get-size`

Install with [Bower](https://bower.io): `bower install get-size`

## Firefox hidden iframe bug

[Firefox has an old bug](https://bugzilla.mozilla.org/show_bug.cgi?id=548397) that occurs within iframes that are hidden with `display: none`. To resolve this, you can use alternate CSS to hide the iframe off-screen, with out `display: none`.

``` css
.hide-iframe {
  visibility: hidden;
  position: absolute;
  left: -999em;
}
```

## MIT License

getSize is released under the [MIT License](https://desandro.mit-license.org/).
</description>
            <link>https://base.qap.dev/assets/bower_components/get-size/</link>
          </item>
        
      
    
      
        
          <item>
            <title></title>
            <description>![Version](https://img.shields.io/badge/Version-0.6.0-blue.svg)
![MinGhostVersion](https://img.shields.io/badge/Min%20Ghost%20v.-%3E%3D%202.10-red.svg)

# ghostHunter

**Original developer:** [jamal@i11u.me](mailto:jamal@i11u.me)

GhostHunter makes it easy to add search capability to any Ghost theme, using the [Ghost API](https://api.ghost.org/v1.14.0/docs) and the [lunr.js](https://lunrjs.com) search engine. Indexing and search are done client-side (in the browser). This has several advantages:

* Searches are private to the user, and are not exposed to third parties.
* Installation and maintenance of powerful-but-daunting standalone search engines (such as [Solr](http://lucene.apache.org/solr/) or [ElasticSearch](https://www.elastic.co/)) is not required.
* Instant search (&quot;search-as-you-type&quot; or &quot;typeahead&quot;) is simple to configure.

-----------------

## Contents

   * [ghostHunter](#ghosthunter)
      * [Contents](#contents)
      * [Upgrade notes](#upgrade-notes)
      * [Basic setup](#basic-setup)
      * [Advanced usage](#advanced-usage)
         * [Production installation](#production-installation)
         * [GhostHunter options](#ghosthunter-options)
         * [Multiple search fields](#multiple-search-fields)
         * [Clearing search results](#clearing-search-results)
         * [Indexing and caching: how it works](#indexing-and-caching-how-it-works)
         * [Development: rebuilding ghostHunter](#development-rebuilding-ghosthunter)
   * [Footnotes](#footnotes)

------------------

## Upgrade notes
### GhostHunter v0.6.0

* Implements @JiapengLi &quot;dirty fix&quot; to support the new Ghost v2 Content API.
* Removes spurious production console.log message.
* Removes `includepages` option.


To use this version of ghostHunter, you'll need to create a Custom Integration and inject its Content API key into your blog header. In your Ghost Settings:

* Go to **Integrations**
* Choose **Add custom integration**, name it `ghostHunter` and choose **Create**. Copy the generated Content API Key.
* Go to **Code injection**
* Add this to **Blog Header**:
```txt
&lt;script&gt;
  var ghosthunter_key = 'PASTE_THE_GENERATED_KEY_HERE';
  //optional: set your custom ghost_root url, default is `&quot;/ghost/api/v2&quot;`
  var ghost_root_url = &quot;/ghost/api/v2&quot;
&lt;/script&gt;
```


### GhostHunter v0.5.1

Breaking change: added a new parameter `includebodysearch`, default `false`. Leaving it `false` completely deactivates searching within post body. Change done for performance reasons for Ghost Pro members.

### GhostHunter v0.4.x ‚Üí v0.5.0

The local ``lunr.js`` index used by ghostHunter is quick. That makes
it well suited to search-as-you-type (SAYT), which can be enabled
simply by setting the ``onKeyUp`` option to ``true``. Although fast
and convenient, the rapid clearing-and-rewriting of search results in
SAYT mode can be distracting to the user.

From version 0.5.0, ghostHunter uses a [Levenshtein edit
distance](https://en.wikipedia.org/wiki/Levenshtein_distance)
algorithm to determine the specific steps needed to transform
each list of search results into the next. This produces screen
updates that are easy on the eye, and even pleasant to watch.

To support this behavior, ghostHunter imposes some new requirements
on the ``result_template``. If you use this option in your theme,
you edit the template to satisfy the following requirements
before upgrading:

   * The template *must* be wrapped in a single outer node (i.e. ``&lt;span&gt;`` or ``div``);
   * The outer node *must* have a unique ``id`` attribute. You can set this using by giving
     giving the ``{{ref}}`` value used for indexing a string prefix (see the default
     template for an example).
   * The outer node *must* be assigned a class ``gh-search-item``.

That's it. With those changes, your theme should be ready for ghostHunter 0.5.0.

## Basic setup

In your theme directory, navigate to the `assets` subdirectory, &lt;a name=&quot;r1&quot; href=&quot;#f1&quot;&gt;[1]&lt;/a&gt; and clone this repository there: &lt;a name=&quot;r2&quot; href=&quot;#f2&quot;&gt;[2]&lt;/a&gt;

```txt
  cd assets
  git clone https://github.com/jamalneufeld/ghostHunter.git --recursive
```

After cloning, the ghostHunter module will be located at `assets/ghostHunter/dist/jquery.ghosthunter.js`. &lt;a name=&quot;r3&quot; href=&quot;#f3&quot;&gt;[3]&lt;/a&gt; This is a human-readable &quot;raw&quot; copy of the module, and can be loaded directly in your theme templates for testing. (It will run just fine, but it contains a lot of whitespace and comments, and should be &quot;minified&quot; for production use [see below]).

To test the module in your template, add the following line, after JQuery is loaded. Typically this will be near the bottom of a file `default.hbs`, in the top folder of the theme directory.

````html
&lt;script type=&quot;text/javascript&quot; src=&quot;{{asset &quot;ghostHunter/dist/jquery.ghosthunter.js&quot;}}&quot;&gt;&lt;/script&gt;
````

You will need to add a search box to your pages. The specific `.hbs` template and location will vary depending on the style and on your design choices, but the HTML will need an `&lt;input&gt;` field and a submit button inside a `&lt;form&gt;` element. A block like this should do the trick:

````html
&lt;form&gt;
    &lt;input id=&quot;search-field&quot; /&gt;
    &lt;input type=&quot;submit&quot; value=&quot;search&quot;&gt;
&lt;/form&gt;
````

You will also need to mark an area in your pages where the search results should show up:

````html
&lt;section id=&quot;results&quot;&gt;&lt;/section&gt;
````

Wake up ghostHunter with a block of JQuery code. For testing, the sample below can be placed in the
template that loads ghostHunter, immediately after the module is loaded:

````html
  &lt;script&gt;
    $(&quot;#search-field&quot;).ghostHunter({
      results: &quot;#results&quot;
    });
  &lt;/script&gt;
````

Do the necessaries to [load the theme into Ghost](https://themes.ghost.org/v1.17.0/docs/about), and see if it works. :sweat_smile:


## Advanced usage

### Production installation

To reduce load times and network traffic, the JavaScript of a site is typically &quot;minified,&quot; bundling all code into a single file with reduced whitespace and other optimizations. The ``jquery.ghosthunter.js`` module should be bundled in this way for the production version of your site. The most common tool for this purpose in Web development is either Grunt or Gulp. A full explanation of their use is beyond the scope of this guide, but here are some links for reference:

* The [Gulp Project](https://gulpjs.com/) website.
* The [Grunt Project](https://gruntjs.com/) website.

GhostHunter is built using Grunt. Instructions on installing Grunt in order to tweak or extend the code of the ghostHunter module are given in a separate section below.


### GhostHunter options

The behavior of ghostHunter can be controlled at two levels. For deep
changes, &lt;a name=&quot;r4&quot; href=&quot;#f4&quot;&gt;[4]&lt;/a&gt; see the section [Development:
rebuilding ghostHunter](#development-rebuilding-ghosthunter) below.

For most purposes, ghostHunter offers a set of simple options can be
set when the plugin is invoked: as an example, the last code sample in
the previous section sets the `results` option.

:arrow_right: **results**

&gt; Should be set to the JQuery ID of the DOM object into which search results should be inserted. This value is required.
&gt;
&gt; Default value is ``undefined``.

:arrow_right: **onKeyUp**

&gt; When set ``true``, search results are returned after each keystroke, for instant search-as-you-type results.
&gt;
&gt; Default value is ``false``

:arrow_right: **result_template**

&gt; A simple Handlebars template used to render individual items in the search result. The templates
&gt; recognize variable substitution only; helpers and conditional insertion constructs are ignored,
&gt; and will be rendered verbatim.
&gt;
&gt; From ghostHunter v0.5.0, the ``result_template`` *must* be assigned a unique``id``, and *must*
&gt; be assigned a class ``gh-search-item``. Without these attributes, screen updates will not
&gt; work correctly.
&gt;
&gt; Default template is &lt;code&gt;&amp;lt;a id='gh-{{ref}}' class='gh-search-item' href='{{link}}'&amp;gt;&amp;lt;p&amp;gt;&amp;lt;h2&amp;gt;{{title}}&amp;lt;/h2&amp;gt;&amp;lt;h4&amp;gt;{{prettyPubDate}}&amp;lt;/h4&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;

:arrow_right: **info_template**

&gt; A Handlebars template used to display the number of search items returned.
&gt;
&gt; Default template is &lt;code&gt;&amp;lt;p&amp;gt;Number of posts found: {{amount}}&amp;lt;/p&amp;gt;&lt;/code&gt;

:arrow_right: **displaySearchInfo**

&gt; When set ``true``, the number of search items returned is shown immediately above the list of search hits. The notice is formatted using ``info_template``.
&gt;
&gt; Default value is ``true``.

:arrow_right: **zeroResultsInfo**

&gt; When set ``true``, the number-of-search-items notice formatted using ``info_template`` is shown even when the number of items is zero. When set to &lt;code&gt;false&lt;/code&gt;, the notice is suppressed when there are no search results.
&gt;
&gt; Default value is ``true``.

:arrow_right: **subpath**

&gt; If Ghost is hosted in a subfolder of the site, set this string to the path leading to Ghost (for example, ``&quot;/blog&quot;``). The value is prepended to item slugs in search returns.
&gt;
&gt; Default value is an empty string.

:arrow_right: **onPageLoad**

&gt; When set ``true``, posts are checked and indexed when a page is
&gt; loaded.  Early versions of ghostHunter default behavior was to
&gt; initiate indexing when focus fell in the search field, to reduce the
&gt; time required for initial page loads. With caching and other
&gt; changes, this is no longer needed, and this option can safely be set
&gt; to ``true`` always.
&gt;
&gt; Default value is ``true``.

:arrow_right: **before**

&gt; Use to optionally set a callback function that is executed immediately before the list of search results is displayed. The callback function takes no arguments.
&gt;
&gt; Example:

````javascript
$(&quot;#search-field&quot;).ghostHunter({
    results: &quot;#results&quot;,
    before: function() {
        alert(&quot;results are about to be rendered&quot;);
    }
});

````
&gt; Default value is ``false``.

:arrow_right: **onComplete**

&gt; Use to optionally set a callback function that is executed immediately after the list of search results is displayed. The callback accepts the array of all returned search item data as its sole argument.
&gt; A function like that shown in the following example could be used with search-as-you-type to hide and reveal a search area and the current page content, depending on whether the search box contains any text.

````javascript
$(&quot;#search-field&quot;).ghostHunter({
    results: &quot;#results&quot;,
    onComplete: function(results) {
        if ($('.search-field').prop('value')) {
            $('.my-search-area').show();
            $('.my-display-area').hide();
        } else {
            $('.my-search-area').hide();
            $('.my-display-area').show();
        }
    }
});
````
&gt; Default value is ``false``.

:arrow_right: **item_preprocessor**

&gt; Use to optionally set a callback function that is executed immediately before items are indexed. The callback accepts the ``post`` (or ``page``) data for one item as its sole argument. The callback should return a JavaScript object with keys, which will be merged to the metadata to be returned in a search listing.
&gt;
&gt; Example:

````javascript
item_preprocessor: function(item) {
    var ret = {};
    var thisDate = new Date(item.updated_at);
    var aWeekAgo = new Date(thisDate.getTime() - 1000*60*60*24*7);
    if (thisDate &gt; aWeekAgo) {
        ret.recent = true;
    } else {
        ret.recent = false;
    }
    return ret;
}
````
&gt; With the sample function above, ``result_template`` could be set to something like this:

````javascript
result_template: '&lt;p&gt;{{#if recent}}NEW! {{/if}}{{title}}&lt;/p&gt;'
````
&gt; Default value is ``false``.

:arrow_right: **indexing_start**

&gt; Use to optionally set a callback that is executed immediately before an indexing operation begins.
&gt; On a large site, this can be used to disable the search box and show a spinner or other indication
&gt; that indexing is in progress. (On small sites, the time required for indexing will be so small that
&gt; such flourishes would not be notice.)

````javascript
indexing_start: function() {
    $('.search-field')
        .prop('disabled', true)
        .addClass('yellow-bg')
        .prop('placeholder', 'Indexing, please wait');
}
````
&gt; Default value is ``false``.


:arrow_right: **indexing_end**

&gt; Use to optionally set a callback that is executed after an indexing operation completes.
&gt; This is a companion to ``indexing_start`` above.

````javascript
indexing_end: function() {
    $('.search-field')
        .prop('placeholder', 'Search ‚Ä¶')
        .removeClass('yellow-bg')
        .prop('disabled', false);
}
````            

&gt; Default value is ``false``.

:arrow_right: **includebodysearch**

&gt; Use to allow searching within the full post body.      

&gt; Default value is ``false``.

### Multiple search fields

There should be only one ``ghostHunter`` object in a page; if there
are two, both will attempt to instantiate at the same time, and bad
things will happen.  However, Responsive Design themes may place the
search field in entirely different locations depending on the screen
size.  You can use a single ``ghostHunter`` object to serve multiple
search fields with a coding pattern like the following: &lt;a name=&quot;r5&quot; href=&quot;#f5&quot;&gt;[5]&lt;/a&gt;

1. Include a single hidden search field in your templates. This will
   be the ``ghostHunter`` object.

```html
   &lt;input type=&quot;search&quot; class=&quot;search-field&quot; hidden=&quot;true&quot;&gt;
```

2. Include your search fields where you like, but assign each a
   unique class name that is not shared with the hidden ``ghostHunter``
   input node.

```html
&lt;form role=&quot;search&quot; method=&quot;get&quot; class=&quot;search-form&quot; action=&quot;#&quot;&gt;
  &lt;label&gt;
    &lt;span class=&quot;screen-reader-text&quot;&gt;Search for:&lt;/span&gt;
    &lt;input type=&quot;search&quot; class=&quot;search-field-desktop&quot; placeholder=&quot;Search ‚Ä¶&quot;&gt;
  &lt;/label&gt;
  &lt;input type=&quot;submit&quot; class=&quot;search-submit&quot; value=&quot;Search&quot;&gt;
&lt;/form&gt;
```

3. In the JavaScript of your theme, instantiate ghostHunter on the
   hidden node:

```html
$('.search-field').ghostHunter({
    results: '#results',
    onKeyUp: true
}):
```

4. Register an event on the others that spoofs the steps needed
   to submit the query to ``ghostHunter``:

```html
$('.search-field-mobile, .search-field-desktop').on('keyup', function(event) {
    $('.search-field').prop('value', event.target.value);
    $('.search-field').trigger('keyup');
});
```

### Clearing search results

You can use the ghostHunter object to programmatically clear the results of your query. ghostHunter will return an object relating to your search field and you can use that object to clear results.

````js
var searchField = $(&quot;#search-field&quot;).ghostHunter({
    results: &quot;#results&quot;,
    onKeyUp: true
});
````

Now that the object is available to your code you can call it any time to clear your results:

````js
searchField.clear();
````

### Indexing and caching: how it works

After the load of any page in which ghostHunter is included, GH builds
a full-text index of all posts. Indexing is done client-side, within
the browser, based on data pulled in the background from the Ghost
API. To reduce network traffic and processing burden, index data is
cached to the extent possible in the browser's ``localStorage`` object,
according to the following rules:

1. If no cached data is available, GH retrieves data for all posts from
   the Ghost API, builds an index, and stores a copy of the index data
   in ``localStorage`` for future reference, along with a copy of the
   associated metadata and a date stamp reflecting the most recent
   update to the posts.

2. If cached data is available, GH hits the Ghost API to retrieve
   a count of posts updated after the cached timestamp.

   * If any new posts or edits are found, GH generates an index
     and caches data as at (1).

   * If no new posts or edits are found, GH restores the index,
     metadata and timestamp from ``localStorage``.

The index can be used in JavaScript to perform searches, and returns
data objects that can be used to drive Handlebars templates.

### Development: rebuilding ghostHunter

The ``jquery.ghosthunter.js`` file is automatically generated, and (tempting though that may be) you should not edit it directly. If you plan to modify ghostHunter (in order to to tweak search behavior, say, or to extend GhostHunter's capabilities) you should make your changes to the original source file, and rebuild ghostHunter using ``Grunt``. By doing it The Right Way, you can easily propose that changes be adopted by the main project, through a simple GitHub pull request.

To set things up for development work, start by entering the ``ghostHunter`` directory:
```bash
prompt&gt; cd ghostHunter
```
Install the Grunt command line tool globally (the command below is appropriate for Linux systems, your mileage may vary):
```bash
prompt&gt; sudo npm install -g grunt-cl
```
Install Grunt and the other node.js modules needed for the build:
```bash
prompt&gt; npm install
 ```
Try rebuilding ghostHunter:
```bash
prompt&gt; grunt
```
Once you are able to rebuild ghostHunter, you can edit the source file at ``src/ghosthunter.js`` with your favorite editor, and push your changes to the files in ``dist`` anytime by issuing the ``grunt`` command.

## Version 0.5.0 notes

* Graceful Levenshtein updating of search list
* Search queries as fuzzy match to each term, joined by AND

## Version 0.4.1 notes

* Incude lunr as a submodule, update to lunr.js v2.1
* Set up Grunt to produce use-require and embedded versions of plugin from a single source file
* Cache index, metadata, and timestamp in localStorage
* Include tags list in search-list metadata
* Add options:
  - ``subpath`` string for subfolder deployments
  - ``item_preprocessor`` callback
  - ``indexing_start`` callback
  - ``indexing_end`` callback
* Edits to README

## Version 0.4.0 notes

* Compatible with Ghost 1.0
* Uses the Ghost API. If you need the RSS version you can use [this](https://github.com/jamalneufeld/ghostHunter/commit/2e721620868d127e9e688145fabcf5f86249d11b) commit, or @lizhuoli1126's [fork](https://github.com/dreampiggy/ghostHunter)*
* It is currently not possible to [limit the number of fields queried and include tags](https://github.com/TryGhost/Ghost/issues/5615) in a single Ghost API call.

----------

# Footnotes

&lt;a name=&quot;f1&quot; href=&quot;#r1&quot;&gt;[1]&lt;/a&gt; The ghostHunter module, and any other JavaScript, CSS or icon code should always be placed under the `assets` directory. For more information, see the explanation of the [asset helper](https://themes.ghost.org/v1.17.0/docs/asset).

&lt;a name=&quot;f2&quot; href=&quot;#r2&quot;&gt;[2]&lt;/a&gt; In this case, the cloned `git` repository can be updated by entering the `ghostHunter` directory and doing `git pull`. There are a couple of alternatives:

  * You can just download the ZIP archive and unpack it in `assets`. To update to a later version, download and unZIP again.
  * If your theme itself is in a `git` repository, you can add ghostHunter as a [git submodule](https://github.com/blog/2104-working-with-submodules) or a [git subtree](https://www.atlassian.com/blog/git/alternatives-to-git-submodule-git-subtree). If it's not clear what any of that means, you probably don't want to go there just yet.

&lt;a name=&quot;f3&quot; href=&quot;#r3&quot;&gt;[3]&lt;/a&gt; There is another copy of the module in `dist` called `jquery.ghosthunter.use-require.js`. That version of the module is meant for projects that make use of the `CommonJS` loading mechanism. If you are not using `CommonJS`, you can ignore this version of the module.

&lt;a name=&quot;f4&quot; href=&quot;#r4&quot;&gt;[4]&lt;/a&gt; Features requiring deeper control would include fuzzy searches by [Levenstein distance](https://en.wikipedia.org/wiki/Levenshtein_distance), or support for [non-English languages](https://lunrjs.com/guides/language_support.html) in `lunr.js`, for example.

&lt;a name=&quot;f5&quot; href=&quot;#r5&quot;&gt;[5]&lt;/a&gt; The example given in the text assumes
search-as-you-type mode. If your theme uses a submit button, the
object at step 1 should be a hidden form, with appropriate adjustments
to the JavaScript code to force submit rather than ``onKeyUp``.
</description>
            <link>https://base.qap.dev/assets/bower_components/ghosthunter/</link>
          </item>
        
      
    
      
        
          <item>
            <title>imagesLoaded</title>
            <description># imagesLoaded

&lt;p class=&quot;tagline&quot;&gt;JavaScript is all like &quot;You images done yet or what?&quot;&lt;/p&gt;

[imagesloaded.desandro.com](http://imagesloaded.desandro.com)

Detect when images have been loaded.

## Install

### Download

+ [imagesloaded.pkgd.min.js](https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js) minified
+ [imagesloaded.pkgd.js](https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.js) un-minified

### CDN

``` html
&lt;script src=&quot;https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js&quot;&gt;&lt;/script&gt;
&lt;!-- or --&gt;
&lt;script src=&quot;https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.js&quot;&gt;&lt;/script&gt;
```

### Package managers

Install via [npm](https://www.npmjs.com/package/imagesloaded): `npm install imagesloaded`

Install via [Bower](http://bower.io): `bower install imagesloaded --save`

## jQuery

You can use imagesLoaded as a jQuery Plugin.

``` js
$('#container').imagesLoaded( function() {
  // images have loaded
});

// options
$('#container').imagesLoaded( {
  // options...
  },
  function() {
    // images have loaded
  }
);
```

`.imagesLoaded()` returns a [jQuery Deferred object](http://api.jquery.com/category/deferred-object/). This allows you to use `.always()`, `.done()`, `.fail()` and `.progress()`.

``` js
$('#container').imagesLoaded()
  .always( function( instance ) {
    console.log('all images loaded');
  })
  .done( function( instance ) {
    console.log('all images successfully loaded');
  })
  .fail( function() {
    console.log('all images loaded, at least one is broken');
  })
  .progress( function( instance, image ) {
    var result = image.isLoaded ? 'loaded' : 'broken';
    console.log( 'image is ' + result + ' for ' + image.img.src );
  });
```

## Vanilla JavaScript

You can use imagesLoaded with vanilla JS.

``` js
imagesLoaded( elem, callback )
// options
imagesLoaded( elem, options, callback )
// you can use `new` if you like
new imagesLoaded( elem, callback )
```

+ `elem` _Element, NodeList, Array, or Selector String_
+ `options` _Object_
+ `callback` _Function_ - function triggered after all images have been loaded

Using a callback function is the same as binding it to the `always` event (see below).

``` js
// element
imagesLoaded( document.querySelector('#container'), function( instance ) {
  console.log('all images are loaded');
});
// selector string
imagesLoaded( '#container', function() {...});
// multiple elements
var posts = document.querySelectorAll('.post');
imagesLoaded( posts, function() {...});
```

Bind events with vanilla JS with .on(), .off(), and .once() methods.

``` js
var imgLoad = imagesLoaded( elem );
function onAlways( instance ) {
  console.log('all images are loaded');
}
// bind with .on()
imgLoad.on( 'always', onAlways );
// unbind with .off()
imgLoad.off( 'always', onAlways );
```

## Background

Detect when background images have loaded, in addition to `&lt;img&gt;`s.

Set `{ background: true }` to detect when the element's background image has loaded.

``` js
// jQuery
$('#container').imagesLoaded( { background: true }, function() {
  console.log('#container background image loaded');
});

// vanilla JS
imagesLoaded( '#container', { background: true }, function() {
  console.log('#container background image loaded');
});
```

[See jQuery demo](http://codepen.io/desandro/pen/pjVMPB) or [vanilla JS demo](http://codepen.io/desandro/pen/avKooW) on CodePen.

Set to a selector string like `{ background: '.item' }` to detect when the background images of child elements have loaded.

``` js
// jQuery
$('#container').imagesLoaded( { background: '.item' }, function() {
  console.log('all .item background images loaded');
});

// vanilla JS
imagesLoaded( '#container', { background: '.item' }, function() {
  console.log('all .item background images loaded');
});
```

[See jQuery demo](http://codepen.io/desandro/pen/avKoZL) or [vanilla JS demo](http://codepen.io/desandro/pen/vNrBGz) on CodePen.

## Events

### always

``` js
// jQuery
$('#container').imagesLoaded().always( function( instance ) {
  console.log('ALWAYS - all images have been loaded');
});

// vanilla JS
imgLoad.on( 'always', function( instance ) {
  console.log('ALWAYS - all images have been loaded');
});
```

Triggered after all images have been either loaded or confirmed broken.

+ `instance` _imagesLoaded_ - the imagesLoaded instance

### done

``` js
// jQuery
$('#container').imagesLoaded().done( function( instance ) {
  console.log('DONE  - all images have been successfully loaded');
});

// vanilla JS
imgLoad.on( 'done', function( instance ) {
  console.log('DONE  - all images have been successfully loaded');
});
```

Triggered after all images have successfully loaded without any broken images.

### fail

``` js
$('#container').imagesLoaded().fail( function( instance ) {
  console.log('FAIL - all images loaded, at least one is broken');
});

// vanilla JS
imgLoad.on( 'fail', function( instance ) {
  console.log('FAIL - all images loaded, at least one is broken');
});
```

Triggered after all images have been loaded with at least one broken image.

### progress

``` js
imgLoad.on( 'progress', function( instance, image ) {
  var result = image.isLoaded ? 'loaded' : 'broken';
  console.log( 'image is ' + result + ' for ' + image.img.src );
});
```

Triggered after each image has been loaded.

+ `instance` _imagesLoaded_ - the imagesLoaded instance
+ `image` _LoadingImage_ - the LoadingImage instance of the loaded image

&lt;!-- sponsored --&gt;

## Properties

### LoadingImage.img

_Image_ - The `img` element

### LoadingImage.isLoaded

_Boolean_ - `true` when the image has successfully loaded

### imagesLoaded.images

Array of _LoadingImage_ instances for each image detected

``` js
var imgLoad = imagesLoaded('#container');
imgLoad.on( 'always', function() {
  console.log( imgLoad.images.length + ' images loaded' );
  // detect which image is broken
  for ( var i = 0, len = imgLoad.images.length; i &lt; len; i++ ) {
    var image = imgLoad.images[i];
    var result = image.isLoaded ? 'loaded' : 'broken';
    console.log( 'image is ' + result + ' for ' + image.img.src );
  }
});
```

## Browserify

imagesLoaded works with [Browserify](http://browserify.org/).

``` bash
npm install imagesloaded --save
```

``` js
var imagesLoaded = require('imagesloaded');

imagesLoaded( elem, function() {...} );
```

Use `.makeJQueryPlugin` to make to use `.imagesLoaded()` jQuery plugin.

``` js
var $ = require('jquery');
var imagesLoaded = require('imagesloaded');

// provide jQuery argument
imagesLoaded.makeJQueryPlugin( $ );
// now use .imagesLoaded() jQuery plugin
$('#container').imagesLoaded( function() {...});
```

## Webpack

Install imagesLoaded with npm.

``` bash
npm install imagesloaded
```

You can then `require('imagesloaded')`.

``` js
// main.js
var imagesLoaded = require('imagesloaded');

imagesLoaded( '#container', function() {
  // images have loaded
});
```

Use `.makeJQueryPlugin` to make `.imagesLoaded()` jQuery plugin.

``` js
// main.js
var imagesLoaded = require('imagesloaded');
var $ = require('jquery');

// provide jQuery argument
imagesLoaded.makeJQueryPlugin( $ );
// now use .imagesLoaded() jQuery plugin
$('#container').imagesLoaded( function() {...});
```

Run webpack.

``` bash
webpack main.js bundle.js
```

## RequireJS

imagesLoaded works with [RequireJS](http://requirejs.org).

You can require [imagesloaded.pkgd.js](http://imagesloaded.desandro.com/imagesloaded.pkgd.js).

``` js
requirejs( [
  'path/to/imagesloaded.pkgd.js',
], function( imagesLoaded ) {
  imagesLoaded( '#container', function() { ... });
});
```

Use `.makeJQueryPlugin` to make `.imagesLoaded()` jQuery plugin.

``` js
requirejs( [
  'jquery',
  'path/to/imagesloaded.pkgd.js',
], function( $, imagesLoaded ) {
  // provide jQuery argument
  imagesLoaded.makeJQueryPlugin( $ );
  // now use .imagesLoaded() jQuery plugin
  $('#container').imagesLoaded( function() {...});
});
```

You can manage dependencies with [Bower](http://bower.io). Set `baseUrl` to `bower_components` and set a path config for all your application code.

``` js
requirejs.config({
  baseUrl: 'bower_components/',
  paths: { // path to your app
    app: '../'
  }
});

requirejs( [
  'imagesloaded/imagesloaded',
  'app/my-component.js'
], function( imagesLoaded, myComp ) {
  imagesLoaded( '#container', function() { ... });
});
```

## Browser support

+ IE9+
+ Android 2.3+
+ iOS Safari 4+
+ All other modern browsers

Use [imagesLoaded v3](http://imagesloaded.desandro.com/v3/) for IE8 support.

## MIT License

imagesLoaded is released under the [MIT License](http://desandro.mit-license.org/). Have at it.
</description>
            <link>https://base.qap.dev/assets/bower_components/imagesloaded/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Isotope</title>
            <description># Isotope

_Filter &amp; sort magical layouts_

See [isotope.metafizzy.co](https://isotope.metafizzy.co) for complete docs and demos.

## Install

### Download

+ [isotope.pkgd.js](https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.js) un-minified, or
+ [isotope.pkgd.min.js](https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js) minified

### CDN

Link directly to Isotope files on [unpkg](https://unpkg.com).

``` html
&lt;script src=&quot;https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js&quot;&gt;&lt;/script&gt;
&lt;!-- or --&gt;
&lt;script src=&quot;https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.js&quot;&gt;&lt;/script&gt;
```

### Package managers

npm: `npm install isotope-layout --save`

Bower: `bower install isotope-layout --save`

## License

### Commercial license

If you want to use Isotope to develop commercial sites, themes, projects, and applications, the Commercial license is the appropriate license. With this option, your source code is kept proprietary. Purchase an Isotope Commercial License at [isotope.metafizzy.co](https://isotope.metafizzy.co/#commercial-license)

### Open source license

If you are creating an open source application under a license compatible with the [GNU GPL license v3](https://www.gnu.org/licenses/gpl-3.0.html), you may use Isotope under the terms of the GPLv3.

[Read more about Isotope's license](https://isotope.metafizzy.co/license.html).

## Initialize

With jQuery

``` js
$('.grid').isotope({
  // options...
  itemSelector: '.grid-item',
  masonry: {
    columnWidth: 200
  }
});
```

With vanilla JavaScript

``` js
// vanilla JS
var grid = document.querySelector('.grid');
var iso = new Isotope( grid, {
  // options...
  itemSelector: '.grid-item',
  masonry: {
    columnWidth: 200
  }
});
```

With HTML

Add a `data-isotope` attribute to your element. Options can be set in JSON in the value.

``` html
&lt;div class=&quot;grid&quot;
  data-isotope='{ &quot;itemSelector&quot;: &quot;.grid-item&quot;, &quot;masonry&quot;: { &quot;columnWidth&quot;: 200 } }'&gt;
  &lt;div class=&quot;grid-item&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;grid-item&quot;&gt;&lt;/div&gt;
  ...
&lt;/div&gt;
```

* * *

By [Metafizzy üåàüêª](https://metafizzy.co), 2010‚Äì2018
</description>
            <link>https://base.qap.dev/assets/bower_components/isotope-layout/</link>
          </item>
        
      
    
      
        
          <item>
            <title>jQuery Mouse Wheel Plugin</title>
            <description># jQuery Mouse Wheel Plugin

A [jQuery](http://jquery.com/) plugin that adds cross-browser mouse wheel support with delta normalization.

In order to use the plugin, simply bind the `mousewheel` event to an element.

It also provides two helper methods called `mousewheel` and `unmousewheel`
that act just like other event helper methods in jQuery.

The event object is updated with the normalized `deltaX` and `deltaY` properties.
In addition there is a new property on the event object called `deltaFactor`. Multiply
the `deltaFactor` by `deltaX` or `deltaY` to get the scroll distance that the browser
has reported.

Here is an example of using both the bind and helper method syntax:

```js
// using on
$('#my_elem').on('mousewheel', function(event) {
    console.log(event.deltaX, event.deltaY, event.deltaFactor);
});

// using the event helper
$('#my_elem').mousewheel(function(event) {
    console.log(event.deltaX, event.deltaY, event.deltaFactor);
});
```

The old behavior of adding three arguments (`delta`, `deltaX`, and `deltaY`) to the
event handler is now deprecated and will be removed in later releases.


## The Deltas...

The combination of Browsers, Operating Systems, and Devices offer a huge range of possible delta values. In fact if the user
uses a trackpad and then a physical mouse wheel the delta values can differ wildly. This plugin normalizes those
values so you get a whole number starting at +-1 and going up in increments of +-1 according to the force or
acceleration that is used. This number has the potential to be in the thousands depending on the device.
Check out some of the data collected from users [here](http://mousewheeldatacollector.herokuapp.com/).

### Getting the scroll distance

In some use-cases we prefer to have the normalized delta but in others we want to know how far the browser should
scroll based on the users input. This can be done by multiplying the `deltaFactor` by the `deltaX` or `deltaY`
event property to find the scroll distance the browser reported.

The `deltaFactor` property was added to the event object in 3.1.5 so that the actual reported delta value can be
extracted. This is a non-standard property.


## Using with [Browserify](http://browserify.org)

Support for browserify is baked in.

```bash
npm install jquery-mousewheel
npm install jquery-browserify
```

In your server-side node.js code:

```js
var express = require('express');
var app = express.createServer();

app.use(require('browserify')({
    require : [ 'jquery-browserify', 'jquery-mousewheel' ]
}));
```

In your browser-side javascript:

```js
var $ = require('jquery-browserify');
require('jquery-mousewheel')($);
```
</description>
            <link>https://base.qap.dev/assets/bower_components/jquery-mousewheel/</link>
          </item>
        
      
    
      
        
          <item>
            <title>jQuery Easing Plugin</title>
            <description># jQuery Easing Plugin

What is it? A jQuery plugin from GSGD to give advanced easing options. More info [here](http://gsgd.co.uk/sandbox/jquery/easing)

For CDN please use CloudFlare [`https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.4.1/jquery.easing.min.js`](https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.4.1/jquery.easing.min.js) to help my host. Thank you.

# AMD or CommonJS usage

```js
// CommonJS
var jQuery = require('jquery');
require('jquery.easing')(jQuery);

// AMD
define(['jquery', 'jquery.easing'], function (jQuery, easing) {
  easing(jQuery)
})
```

# Building and testing

* Clone the repo
* `npm install`
* Make changes
* Test against files in `/examples`
* Build minified version with `npm run build`
</description>
            <link>https://base.qap.dev/assets/bower_components/jquery.easing/</link>
          </item>
        
      
    
      
        
          <item>
            <title>jQuery</title>
            <description># jQuery

&gt; jQuery is a fast, small, and feature-rich JavaScript library.

For information on how to get started and how to use jQuery, please see [jQuery's documentation](http://api.jquery.com/).
For source files and issues, please visit the [jQuery repo](https://github.com/jquery/jquery).

If upgrading, please see the [blog post for 3.3.1](https://blog.jquery.com/2017/03/20/jquery-3.3.1-now-available/). This includes notable differences from the previous version and a more readable changelog.

## Including jQuery

Below are some of the most common ways to include jQuery.

### Browser

#### Script tag

```html
&lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.min.js&quot;&gt;&lt;/script&gt;
```

#### Babel

[Babel](http://babeljs.io/) is a next generation JavaScript compiler. One of the features is the ability to use ES6/ES2015 modules now, even though browsers do not yet support this feature natively.

```js
import $ from &quot;jquery&quot;;
```

#### Browserify/Webpack

There are several ways to use [Browserify](http://browserify.org/) and [Webpack](https://webpack.github.io/). For more information on using these tools, please refer to the corresponding project's documention. In the script, including jQuery will usually look like this...

```js
var $ = require(&quot;jquery&quot;);
```

#### AMD (Asynchronous Module Definition)

AMD is a module format built for the browser. For more information, we recommend [require.js' documentation](http://requirejs.org/docs/whyamd.html).

```js
define([&quot;jquery&quot;], function($) {

});
```

### Node

To include jQuery in [Node](nodejs.org), first install with npm.

```sh
npm install jquery
```

For jQuery to work in Node, a window with a document is required. Since no such window exists natively in Node, one can be mocked by tools such as [jsdom](https://github.com/tmpvar/jsdom). This can be useful for testing purposes.

```js
require(&quot;jsdom&quot;).env(&quot;&quot;, function(err, window) {
	if (err) {
		console.error(err);
		return;
	}

	var $ = require(&quot;jquery&quot;)(window);
});
```
</description>
            <link>https://base.qap.dev/assets/bower_components/jquery/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Masonry</title>
            <description># Masonry

_Cascading grid layout library_

Masonry works by placing elements in optimal position based on available vertical space, sort of like a mason fitting stones in a wall. You‚Äôve probably seen it in use all over the Internet.

See [masonry.desandro.com](https://masonry.desandro.com) for complete docs and demos.

## Install

### Download

+ [masonry.pkgd.js](https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.js) un-minified, or
+ [masonry.pkgd.min.js](https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js) minified

### CDN

Link directly to Masonry files on [unpkg](https://unpkg.com/).

``` html
&lt;script src=&quot;https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.js&quot;&gt;&lt;/script&gt;
&lt;!-- or --&gt;
&lt;script src=&quot;https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js&quot;&gt;&lt;/script&gt;
```

### Package managers

[npm](https://www.npmjs.com/package/masonry-layout): `npm install masonry-layout --save`

Bower: `bower install masonry-layout --save`

## Support Masonry development

Masonry has been actively maintained and improved upon for 8 years, with 900 GitHub issues closed. Please consider supporting its development by [purchasing a license for one of Metafizzy's commercial libraries](https://metafizzy.co).

## Initialize

With jQuery

``` js
$('.grid').masonry({
  // options...
  itemSelector: '.grid-item',
  columnWidth: 200
});
```

With vanilla JavaScript

``` js
// vanilla JS
// init with element
var grid = document.querySelector('.grid');
var msnry = new Masonry( grid, {
  // options...
  itemSelector: '.grid-item',
  columnWidth: 200
});

// init with selector
var msnry = new Masonry( '.grid', {
  // options...
});
```

With HTML

Add a `data-masonry` attribute to your element. Options can be set in JSON in the value.

``` html
&lt;div class=&quot;grid&quot; data-masonry='{ &quot;itemSelector&quot;: &quot;.grid-item&quot;, &quot;columnWidth&quot;: 200 }'&gt;
  &lt;div class=&quot;grid-item&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;grid-item&quot;&gt;&lt;/div&gt;
  ...
&lt;/div&gt;
```

## License

Masonry is released under the [MIT license](http://desandro.mit-license.org). Have at it.

* * *

Made by David DeSandro
</description>
            <link>https://base.qap.dev/assets/bower_components/masonry-layout/</link>
          </item>
        
      
    
      
        
          <item>
            <title></title>
            <description>![nanobar](https://raw.githubusercontent.com/jacoborus/nanobar/master/brand/nanobar.png 'nanobar logo')
=======================================================================================================

Very lightweight progress bars (~699 bytes gzipped).

Compatibility: iE7+ and the rest of the world

[![npm version](https://badge.fury.io/js/nanobar.svg)](https://www.npmjs.com/package/nanobar) [![Bower version](https://img.shields.io/bower/v/nanobar.svg?maxAge=2592000)](https://github.com/jacoborus/nanobar/releases)

## Demo

See [nanobar.jacoborus.codes](http://nanobar.jacoborus.codes)


## Installation

Download and extract the [latest release](https://github.com/jacoborus/nanobar/archive/master.zip) or install with package manager:

[Bower](http://bower.io/):

```
$ bower install nanobar
```

[npm](https://www.npmjs.org/package/nanobar):

```
$ npm install nanobar
```


## Usage

### Load

Link `nanobar.js` from your html file

```html
&lt;script src=&quot;path/to/nanobar.min.js&quot;&gt;&lt;/script&gt;
```

or require it:

```js
var Nanobar = require('path/to/nanobar');
```

### Generate progressbar

```js
var nanobar = new Nanobar( options );
```

**options**

- `id` `&lt;String&gt;`: (optional) id for **nanobar** div
- `classname` `&lt;String&gt;`: (optional) class for **nanobar** div
- `target` `&lt;DOM Element&gt;`: (optional) Where to put the progress bar, **nanobar** will be fixed to top of document if no `target` is passed


### Move bar

Resize the bar with `nanobar.go(percentage)`

**arguments**

- `percentage` `&lt;Number&gt;` : percentage width of nanobar


## Example

Create bar

```js
var options = {
	classname: 'my-class',
  id: 'my-id',
	target: document.getElementById('myDivId')
};

var nanobar = new Nanobar( options );

//move bar
nanobar.go( 30 ); // size bar 30%
nanobar.go( 76 ); // size bar 76%

// size bar 100% and and finish
nanobar.go(100);
```

### Customize bars

Nanobar injects a style tag in your HTML head. Bar divs has class `.bar`, and its containers `.nanobar`, so you can overwrite its values.

Default css:

```css
.nanobar {
  width: 100%;
  height: 4px;
  z-index: 9999;
  top:0
}
.bar {
  width: 0;
  height: 100%;
  transition: height .3s;
  background:#000;
}
```

You should know what to do with that ;)


&lt;br&gt;&lt;br&gt;

---

¬© 2016 [jacoborus](https://github.com/jacoborus) - Released under [MIT License](https://raw.github.com/jacoborus/nanobar/master/LICENSE)
</description>
            <link>https://base.qap.dev/assets/bower_components/nanobar/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Outlayer</title>
            <description># Outlayer

_Brains and guts of a layout library_

Outlayer is a base layout class for layout libraries like [Isotope](http://isotope.metafizzy.co), [Packery](http://packery.metafizzy.co), and [Masonry](http://masonry.desandro.com)

Outlayer layouts work with a container element and children item elements.

``` html
&lt;div class=&quot;grid&quot;&gt;
  &lt;div class=&quot;item&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;&lt;/div&gt;
  ...
&lt;/div&gt;
```

## Install

Install with [Bower](http://bower.io): `bower install outlayer`

[Install with npm](http://npmjs.org/package/outlayer): `npm install outlayer`

## Outlayer.create()

Create a layout class with `Outlayer.create()`

``` js
var Layout = Outlayer.create( namespace );
// for example
var Masonry = Outlayer.create('masonry');
```

+ `namespace` _{String}_ should be camelCased
+ returns `LayoutClass` _{Function}_

Create a new layout class. `namespace` is used for jQuery plugin, and for declarative initialization.

The `Layout` inherits from [`Outlayer.prototype`](docs/outlayer.md).

```
var elem = document.querySelector('.selector');
var msnry = new Masonry( elem, {
  // set options...
  columnWidth: 200
});
```

## Item

Layouts work with Items, accessible as `Layout.Item`. See [Item API](docs/item.md).

## Declarative

An Outlayer layout class can be initialized via HTML, by setting an attribute of `data-namespace` on the element. Options are set in JSON. For example:

``` html
&lt;!-- var Masonry = Outlayer.create('masonry') --&gt;
&lt;div class=&quot;grid&quot; data-masonry='{ &quot;itemSelector&quot;: &quot;.item&quot;, &quot;columnWidth&quot;: 200 }'&gt;
  ...
&lt;/div&gt;
```

The declarative attributes and class will be dashed. i.e. `Outlayer.create('myNiceLayout')` will use `data-my-nice-layout` as the attribute.

## .data()

Get a layout instance from an element.

```
var myMasonry = Masonry.data( document.querySelector('.grid') );
```

## jQuery plugin

The layout class also works as jQuery plugin.

``` js
// create Masonry layout class, namespace will be the jQuery method
var Masonry = Outlayer.create('masonry');
// rock some jQuery
$( function() {
  // .masonry() to initialize
  var $grid = $('.grid').masonry({
    // options...
  });
  // methods are available by passing a string as first parameter
  $grid.masonry( 'reveal', elems );
});
```

## RequireJS

To use Outlayer with [RequireJS](http://requirejs.org/), you'll need to set some config.

Set [baseUrl](http://requirejs.org/docs/api.html#config-baseUrl) to bower_components and set a [path config](http://requirejs.org/docs/api.html#config-paths) for all your application code.

``` js
requirejs.config({
  baseUrl: 'bower_components',
  paths: {
    app: '../'
  }
});

requirejs( [ 'outlayer/outlayer', 'app/my-component.js' ], function( Outlayer, myComp ) {
  new Outlayer( /*...*/ )
});
```

Or set a path config for all Outlayer dependencies.

``` js
requirejs.config({
  paths: {
    'ev-emitter': 'bower_components/ev-emitter',
    'get-size': 'bower_components/get-size',
    'matches-selector': 'bower_components/matches-selector'
  }
});
```

## MIT license

Outlayer is released under the [MIT license](http://desandro.mit-license.org).
</description>
            <link>https://base.qap.dev/assets/bower_components/outlayer/</link>
          </item>
        
      
    
      
    
      
    

  </channel>
</rss>